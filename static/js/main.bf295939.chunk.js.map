{"version":3,"sources":["Api.js","components/ProfileButton.js","Hooks.js","AppState.js","components/LoginDialog.js","models/Permissions.js","components/AppBar.js","views/ViewContent.js","views/AboutView.js","utils/stableSort.js","utils/tmx.js","components/RankingsTable.js","utils/tools.js","components/trackmania/CampaignMenus.js","components/RecordsTable.js","utils/srcom.js","components/RecordsTableSrcom.js","components/SimpleTitle.js","components/RecordsChart.js","components/FloatingActionButton.js","views/GameView.js","views/NotFoundView.js","views/ReplayView.js","components/RankingsTableTrackmania.js","components/RecordsTableTrackmania.js","components/UniqueRecordsChart.js","components/trackmania/CompetitionsMenus.js","components/trackmania/CampaignTab.js","components/CompetitionsTableTrackmania.js","components/trackmania/CompetitionsTab.js","components/trackmania/RankingsTab.js","views/TrackmaniaView.js","components/RecordsTableHistory.js","components/history/CampaignTab.js","components/history/RankingsTab.js","components/LongestDomination.js","components/LongestLasting.js","components/LargestImprovement.js","components/history/StatisticsTab.js","views/TrackmaniaHistoryView.js","views/LoginView.js","views/ProfileView.js","views/UsersView.js","App.js","utils/serviceWorker.js","index.js"],"names":["Api","this","baseApi","game","file","fetch","res","console","log","url","status","ok","json","api2","options","credentials","source","window","open","query","id","useStyles","makeStyles","theme","root","paddingRight","avatar","width","height","color","palette","text","primary","backgroundColor","contrastText","anchorOrigin","vertical","horizontal","transformOrigin","ProfileButton","user","onClickLogin","onClickLogout","React","useState","anchor","setAnchor","handleClose","classes","Boolean","className","Tooltip","placement","title","isLoggedIn","profile","nickname","disableFocusListener","IconButton","size","onClick","event","currentTarget","Avatar","alt","slice","toUpperCase","elevation","getContentAnchorEl","anchorEl","onClose","MenuItem","component","RouterLink","to","useIsMounted","ref","useRef","useEffect","current","useLocalStorage","key","initialStorage","storage","localStorage","getItem","JSON","parse","setItem","stringify","internalSetStorage","useCallback","newStorage","User","error","permission","permissions","DarkMode","enabled","toString","initialState","darkMode","users","AppReducer","state","action","data","setProfile","toggle","Error","createContext","LoginDialog","props","handleListItemClick","value","Dialog","aria-labelledby","maxWidth","fullWidth","DialogTitle","List","ListItem","autoFocus","button","ListItemText","DialogActions","Button","Status","ACTIVE","INACTIVE","BANNED","Permissions","api_MANAGE_USERS","api_MANAGE_DATA","trackmania_DOWNLOAD_FILES","trackmania_MANAGE_MEDIA","trackmania_MANAGE_DATA","maniaplanet_DOWNLOAD_FILES","maniaplanet_MANAGE_MEDIA","maniaplanet_MANAGE_DATA","paddingBottom","spacing","list","menuButton","marginLeft","marginRight","drawer","flexShrink","appBar","zIndex","flex","active","main","pageLinks","link","inDrawer","default","isDivider","withRouter","location","useContext","AppState","dispatch","history","useHistory","drawerOpen","setDrawerOpen","loginOpen","setLoginOpen","getMe","then","catch","page","useMemo","find","x","pathname","startsWith","document","host","showDrawer","Divider","filter","map","item","index","undefined","position","Toolbar","Hidden","lgUp","Typography","variant","Link","underline","Fade","in","timeout","logout","replace","implementation","SwipeableDrawer","onOpen","tabIndex","role","onKeyDown","mdDown","Drawer","loginStart","_","marginBottom","ViewContent","children","Grid","container","xs","md","lg","aboutBox","padding","branches","repo","branch","noWrap","whiteSpace","MinTableCell","TableCell","Padding","style","paddingTop","SmallPadding","AboutView","isMounted","gitHub","setGitHub","anyErrors","err","Promise","all","results","sha","author","commit","message","date","Paper","length","CircularProgress","progress","overflowX","TableHead","TableRow","TableBody","idx","align","rel","href","moment","from","html_url","login","name","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","label","cmpOptions","numeric","stableSort","array","order","orderBy","desc","a","b","aa","getPropFast","localeCompare","cmp","el","sort","stableSortSort","thenBy","bb","emptyObj","obj","path","indexOf","split","s","reduce","acc","val","protocol","includes","trackUrl","imageUrl","replayUrl","userUrl","rows","sortable","id2","RankingsTableHead","onRequestSort","hasDuration","sortDirection","enterDelay","TableSortLabel","direction","prop1","prop2","defaultState","rowsPerPage","minifiedStyle","RecordsTable","setState","newOrderBy","newThenBy","tmx","target","wrs","duration","formatScore","score","type","csec","tsec","Math","floor","sec","min","msec","hourScale","scaleLinear","domain","range","getDateDifferenceColor","passedHours","diff","minuteScale","RecordsTableHead","property","stats","useLiveDuration","tmxGame","wr","track","isFirst","rowSpan","records","replay","isBefore","disabled","fontSize","fromNow","format","unit","totalTime","humanize","colSpan","totalPoints","level","category","RecordsTableSrcomHead","RecordsTableSrcom","srcom","media","gutterBottom","withTheme","labels","series","rest","isDarkTheme","push","colors","Array","fill","random","padStart","legend","show","responsive","breakpoint","chart","plotOptions","pie","donut","total","fab","margin","top","right","bottom","left","jumpToTop","smoothScroll","y","documentElement","scrollTop","requestAnimationFrame","scrollTo","FloatingActionButton","onScroll","clearTimeout","setTimeout","scrollX","scrollY","addEventListener","removeEventListener","useScroll","Zoom","Fab","padTop","match","setGame","gameName","setGameName","tab","setTab","params","request","tracks","campaign","t","leaderboard","forEach","entry","r","Table","LinearProgress","SimpleTitle","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","Box","p","justify","alignContent","RankingsTable","NotFoundView","Alert","defaultReplay","info","magic","version","settings","classId","headerSize","headerChunks","chunkOffset","ReplayView","useTheme","setReplay","parseGhost","setParseGhost","errorMessage","setErrorMessage","reason","parseReplay","reader","FileReader","onload","result","Buffer","Replay","read","ghost","restData","removeData","Object","keys","_view","readAsArrayBuffer","handleChange","ev","files","removeDragData","dataTransfer","items","clear","clearData","openFile","click","disableElevation","display","Checkbox","onDrop","preventDefault","i","kind","getAsFile","onDragOver","src","displayDataTypes","displayObjectSize","enableClipboard","Snackbar","autoHideDuration","severity","rowsOficial","rowsTotd","rowsCompetition","tooltip","rowsCotd","isOfficial","cotd","hattricks","linkToTrackmaniaIoProfile","encodeURIComponent","accountId","displayName","wins","matches","qualifiers","rowsOfficial","rowsTOTD","official","useRowStyles","borderBottom","RecordsHistoryRow","pastMinutes","showDownloadButton","delta","setAfter","note","zone","join","RecordsRow","onClickHistory","defaultSort","monthDay","replayUrlPublic","isLast","Collapse","unmountOnExit","aria-label","historyWr","totd","setStorage","setHistory","savedState","xaxis","categories","dataLabels","toolbar","foreColor","bar","seasonMenu","yearMenu","now","releaseDate","tz","set","hour","minute","second","currentMonth","clone","seasons","0","1","2","3","season","month","year","toLowerCase","add","reverse","getTotdMenu","menu","lastMonth","monthName","getInitialValue","isFirstYear","calculateSetAfter","releasedAt","wrDate","diffSeconds","setAfterHours","setAfterMinutes","setBeforeHours","setBeforeMinutes","formControl","minWidth","CampaignTab","onChangeCampaign","onChangeYear","rankingsType","setRankingsType","onChangeRankingsType","utc","historyWrDate","hasPermission","rankingsCountryType","FormControl","InputLabel","Select","CompetitionsTableHead","competition","doubleWin","round","qualifier","winner","nb_players","CompetitionsTable","firstCotdDate","getCotdMenu","competitionMenu","CompetitionsTab","onChangeCompetition","onChangeMonth","isCotd","setStats","countryLeaderboard","RankingsTab","setCampaign","setYear","setCompetition","competitionYear","setCompetitionYear","competitionMonth","setCompetitionMonth","onChangeCompetitionYear","getInitialCompetitionValue","onChangeCompetitionMonth","trackType","deltaSign","validated","campaignName","campaigns","currentCampaign","label2","LongestDominationHead","scoreType","lastScore","abs","beatenBy","LongestLastingHead","LargestImprovementHead","rowl","StatisticsTab","setType","setTrackType","onChangeType","onChangeTrackType","StatsComponent","LongestDomination","LongestLasting","LargestImprovement","Set","LoginView","useLocation","useParams","search","statusToText","login_id","getUsers","_id","views","marginTop","App","useReducer","createMuiTheme","light","red","dark","secondary","orange","A400","context","ThemeProvider","CssBaseline","Provider","exact","TrackmaniaView","TrackmaniaHistoryView","GameView","ProfileView","UsersView","hostname","ReactDOM","render","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf295939.chunk.js","sourcesContent":["class Api {\n    constructor() {\n        this.baseApi =\n            process.env.NODE_ENV === 'development'\n                ? 'http://localhost:8081'\n                : 'https://raw.githubusercontent.com/NeKzBot/tmx-records/api';\n    }\n    async request(game, file) {\n        const res = await fetch(`${this.baseApi}/${game}/${file || 'latest'}.json`);\n        console.log(`GET ${res.url} (${res.status})`);\n\n        if (!res.ok) {\n            throw res;\n        }\n\n        return await res.json();\n    }\n}\n\nclass ApiV2 {\n    constructor() {\n        this.baseApi = process.env.NODE_ENV === 'development'\n            ? 'https://trackmania.dev.local:8080'\n            : 'https://api.nekz.me';\n        this.options =  { credentials: 'include' };\n    }\n    loginStart(source) {\n        window.open(`${this.baseApi}/login/${source}`, '_self');\n    }\n    async login(source, query) {\n        const res = await fetch(`${this.baseApi}/login/${source}/authorize${query}`, this.options);\n        console.log(`[API] GET ${res.url} (${res.status})`);\n\n        if (!res.ok) {\n            throw res;\n        }\n\n        return await res.json();\n    }\n    async logout() {\n        const res = await fetch(`${this.baseApi}/logout`, this.options);\n        console.log(`[API] GET ${res.url} (${res.status})`);\n\n        if (!res.ok) {\n            throw res;\n        }\n    }\n    async getMe() {\n        const res = await fetch(`${this.baseApi}/@me`, this.options);\n        console.log(`[API] GET ${res.url} (${res.status})`);\n\n        if (!res.ok) {\n            throw res;\n        }\n\n        return await res.json();\n    }\n    replayUrl(id) {\n        return `${this.baseApi}/api/v1/trackmania/replays/${id}`;\n    }\n    async getUsers() {\n        const res = await fetch(`${this.baseApi}/api/v1/users`, this.options);\n        console.log(`[API] GET ${res.url} (${res.status})`);\n\n        if (!res.ok) {\n            throw res;\n        }\n\n        return await res.json();\n    }\n}\n\nexport const api2 = new ApiV2();\nexport default new Api();\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PopoverOrigin } from '@material-ui/core/Popover';\nimport { api2 } from '../Api';\nimport { blue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingRight: '10px',\n    },\n    avatar: {\n        width: '35px',\n        height: '35px',\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.primary.contrastText,\n    },\n}));\n\nconst anchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'center',\n};\nconst transformOrigin = {\n    vertical: 'top',\n    horizontal: 'center',\n};\n\nconst ProfileButton = ({ user, onClickLogin, onClickLogout }) => {\n    const [anchor, setAnchor] = React.useState(null);\n\n    const handleOpen = (event) => {\n        if (!user.isLoggedIn()) {\n            onClickLogin(event);\n        } else {\n            setAnchor(event.currentTarget);\n        }\n    };\n\n    const handleClose = () => {\n        setAnchor(null);\n    };\n\n    const handleLogout = () => {\n        onClickLogout();\n        handleClose();\n    };\n\n    const classes = useStyles();\n    const open = Boolean(anchor);\n\n    return (\n        <div className={classes.root}>\n            <Tooltip\n                placement=\"bottom\"\n                title={user.isLoggedIn() ? 'Logged in as ' + user.profile.nickname : 'Log in'}\n                disableFocusListener\n            >\n                <IconButton color=\"inherit\" size=\"small\" onClick={handleOpen}>\n                    {user.isLoggedIn() ? (\n                        <Avatar className={classes.avatar} alt=\"avatar_image\" color=\"secondary\">\n                            {user.profile.nickname.slice(0, 3).toUpperCase()}\n                        </Avatar>\n                    ) : (\n                        <AccountCircle />\n                    )}\n                </IconButton>\n            </Tooltip>\n            <Menu\n                id=\"menu-appbar\"\n                elevation={0}\n                getContentAnchorEl={null}\n                anchorEl={anchor}\n                anchorOrigin={anchorOrigin}\n                transformOrigin={transformOrigin}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose} component={RouterLink} to=\"me\">\n                    Profile\n                </MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    );\n};\n\nexport default ProfileButton;\n","import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n\nexport const useScroll = () => {\n    const timeout = React.useRef(undefined);\n    const [state, setState] = React.useState({ x: 0, y: 0 });\n\n    const onScroll = React.useCallback(() => {\n        clearTimeout(timeout.current);\n        timeout.current = setTimeout(() => {\n            setState({ x: window.scrollX, y: window.scrollY });\n        }, 100);\n    }, [setState]);\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            clearTimeout(timeout.current);\n            window.removeEventListener('scroll', onScroll);\n        };\n    }, [onScroll]);\n\n    return state;\n};\n\nexport const useLocalStorage = (key, initialStorage) => {\n    const [storage, internalSetStorage] = React.useState(() => {\n        const storage = localStorage.getItem(key);\n        if (storage) {\n            try {\n                return JSON.parse(storage);\n            } catch {\n            }\n        }\n\n        localStorage.setItem(key, JSON.stringify(initialStorage));\n        return initialStorage;\n    });\n\n    const setStorage = React.useCallback((newStorage) => {\n        internalSetStorage(newStorage);\n        localStorage.setItem(key, JSON.stringify(newStorage));\n    }, [internalSetStorage]);\n\n    return [storage, setStorage];\n};\n","import React from 'react';\n\nclass User {\n    profile = null;\n\n    constructor() {\n        this.profile = null;\n    }\n    hasLoaded() {\n        return this.profile;\n    }\n    isLoggedIn() {\n        return this.profile && !this.profile.error;\n    }\n    setProfile(profile) {\n        this.profile = profile;\n        return this;\n    }\n    hasPermission(permission) {\n        return (this.profile?.permissions & permission) > 0;\n    }\n}\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst initialState = {\n    user: new User(),\n    darkMode: new DarkMode(),\n    users: [],\n};\n\nexport const AppReducer = [\n    (state, { action, data }) => {\n        switch (action) {\n            case 'setProfile':\n                return {\n                    ...state,\n                    user: state.user.setProfile(data),\n                };\n            case 'setUsers':\n                return {\n                    ...state,\n                    users: data || [],\n                };\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    initialState,\n];\n\nexport default React.createContext(initialState);\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\n\nconst LoginDialog = (props) => {\n    const { onClose, open } = props;\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const handleListItemClick = (value) => {\n        onClose(value);\n    };\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} maxWidth=\"sm\" fullWidth>\n            <DialogTitle id=\"simple-dialog-title\">Login with</DialogTitle>\n            <List>\n                <ListItem autoFocus button onClick={() => handleListItemClick('trackmania')}>\n                    <ListItemText primary=\"Trackmania (Ubisoft Connect)\" />\n                </ListItem>\n                <ListItem autoFocus button onClick={() => handleListItemClick('maniaplanet')}>\n                    <ListItemText primary=\"Trackmania² (Maniaplanet)\" />\n                </ListItem>\n            </List>\n            <DialogActions>\n                <Button autoFocus onClick={handleClose} color=\"primary\">\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default LoginDialog;\n","export const Status = {\n    ACTIVE: 0,\n    INACTIVE: 1,\n    BANNED: 2,\n};\n\nexport const Permissions = {\n    api_MANAGE_USERS: 1 << 0,\n    api_MANAGE_DATA: 1 << 1,\n\n    trackmania_DOWNLOAD_FILES: 1 << 5,\n    trackmania_MANAGE_MEDIA: 1 << 6,\n    trackmania_MANAGE_DATA: 1 << 7,\n\n    maniaplanet_DOWNLOAD_FILES: 1 << 10,\n    maniaplanet_MANAGE_MEDIA: 1 << 11,\n    maniaplanet_MANAGE_DATA: 1 << 12,\n};\n","import React from 'react';\nimport { Link as RouterLink, withRouter, useHistory } from 'react-router-dom';\nimport MaterialAppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fade from '@material-ui/core/Fade';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ProfileButton from './ProfileButton';\nimport { useTitle } from '../Hooks';\nimport { api2 } from '../Api';\nimport AppState from '../AppState';\nimport LoginDialog from './LoginDialog';\nimport { Permissions } from '../models/Permissions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(8),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    drawer: {\n        width: 240,\n        flexShrink: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    flex: {\n        flex: 1,\n    },\n    active: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst pageLinks = [\n    { title: '404 - Page Not Found', link: null, inDrawer: false },\n    { title: 'trackmania-records', link: '/', inDrawer: false },\n    { title: 'Trackmania', link: '/trackmania', inDrawer: true, default: true },\n    { title: 'Trackmania 2', link: '/tm2', inDrawer: true, default: true },\n    { title: 'Trackmania Wii', link: '/tmwii', inDrawer: true, default: true },\n    { title: 'Nations Forever', link: '/tmnforever', inDrawer: true },\n    { title: 'United', link: '/united', inDrawer: true },\n    { title: 'Nations ESWC', link: '/nations', inDrawer: true },\n    /* { title: 'Sunrise', link: '/sunrise', inDrawer: true },\n    { title: 'Original', link: '/original', inDrawer: true }, */\n    { isDivider: true },\n    { title: 'Users', link: '/users', inDrawer: (user) => user.isLoggedIn() && (user.profile.permissions & Permissions.api_MANAGE_USERS) },\n    { title: 'Replay Inspection', link: '/replay', inDrawer: true },\n    { title: 'About', link: '/about', inDrawer: true },\n    { title: 'Login', link: '/login', inDrawer: false },\n    { title: 'Profile', link: '/me', inDrawer: false },\n];\n\nconst AppBar = ({ location }) => {\n    const {\n        state: { user },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const history = useHistory();\n\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    const [loginOpen, setLoginOpen] = React.useState(false);\n\n    const login = () => {\n        setLoginOpen(true);\n    };\n\n    const closeLogin = (source) => {\n        if (source) {\n            api2.loginStart(source);\n        } else {\n            setLoginOpen(false);\n        }\n    };\n\n    const logout = () => {\n        api2.logout()\n            .then(() => {\n                dispatch({ action: 'setProfile', data: null });\n                history.replace('/');\n            })\n            .catch(console.error);\n\n        setLoginOpen(false);\n    };\n\n    React.useEffect(() => {\n        api2.getMe()\n            .then((data) => dispatch({ action: 'setProfile', data }))\n            .catch(console.error);\n    }, []);\n\n    const page = React.useMemo(\n        () =>\n            pageLinks.find(\n                (x) => x.link === location.pathname || (x.link !== null && location.pathname.startsWith(x.link + '/')),\n            ) || pageLinks[0],\n        [location],\n    );\n\n    useTitle(page.title);\n\n    const showDrawer = (state) => () => {\n        setDrawerOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} component={RouterLink} to={'/'}>\n                    <ListItemText primary=\"Trackmania Records\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks\n                    .filter((x) => typeof x.inDrawer === 'function' ? x.inDrawer(user) : x.inDrawer || x.isDivider)\n                    .map((item, index) => {\n                        if (item.isDivider) {\n                            return (\n                                <Divider key={index} />\n                            );\n                        }\n\n                        return (\n                            <ListItem\n                                button\n                                key={index}\n                                component={RouterLink}\n                                to={item.link}\n                                className={item.title === page.title ? classes.active : undefined}\n                            >\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        );\n                    })}\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <MaterialAppBar className={classes.appBar} position=\"fixed\">\n                <Toolbar>\n                    <Hidden lgUp>\n                        <IconButton className={classes.menuButton} onClick={showDrawer(true)} color=\"inherit\">\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        <Link component={RouterLink} to=\"/\" color=\"inherit\" underline=\"none\">\n                            {page.title}\n                        </Link>\n                    </Typography>\n                    <div className={classes.flex} />\n                    <Fade in={true} timeout={1000}>\n                        <ProfileButton user={user} onClickLogin={login} onClickLogout={logout} />\n                    </Fade>\n                </Toolbar>\n            </MaterialAppBar>\n            <Hidden lgUp implementation=\"css\">\n                <SwipeableDrawer open={drawerOpen} onClose={showDrawer(false)} onOpen={showDrawer(true)} variant=\"temporary\">\n                    <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                        {list}\n                    </div>\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden mdDown implementation=\"css\">\n                <Drawer variant=\"permanent\">\n                    <div tabIndex={0} role=\"button\">\n                        {list}\n                    </div>\n                </Drawer>\n            </Hidden>\n            <LoginDialog onClose={closeLogin} open={loginOpen} />\n        </div>\n    );\n};\n\nexport default withRouter(AppBar);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        marginBottom: 30,\n    },\n}));\n\nconst ViewContent = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <Grid className={classes.root} container>\n            <Grid item xs={false} md={1} lg={2} />\n            <Grid item xs={12} md={10} lg={9}>\n                {children}\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ViewContent;\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewContent from './ViewContent';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = [\n    { repo: 'NeKzor/trackmania-records', branch: 'master' },\n    { repo: 'NeKzBot/tmx-records', branch: 'api' },\n    { repo: 'NeKzor/trackmania-records', branch: 'gh-pages' },\n];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\nconst SmallPadding = () => <div style={{ paddingTop: '25px' }} />;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map(({ repo, branch }) => fetch(`https://api.github.com/repos/${repo}/commits/${branch}`)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author ? branch.author : branch.commit.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper className={classes.aboutBox}>\n                <Typography component=\"h2\" variant=\"h5\">\n                    Trackmania Campaign Records & Statistics\n                </Typography>\n                <SmallPadding />\n                <Typography variant=\"body1\">\n                    The largest mirror for campaign world records of many Trackmania games.\n                </Typography>\n                <Typography variant=\"body1\">We list, rank and compare players who set the fastest runs.</Typography>\n                <Padding />\n                <Typography variant=\"h5\">News</Typography>\n                <SmallPadding />\n                <Typography variant=\"body1\">Jul. 2022</Typography>\n                <div>\n                    <ul>\n                        <li>\n                            Removed duration statistics from Trackmania player rankings.\n                        </li>\n                        <li>\n                            Enabled Nations ESWC updates, history and statistics.\n                        </li>\n                    </ul>\n                </div>\n                <Typography variant=\"body1\">Feb. 2022</Typography>\n                <div>\n                    <ul>\n                        <li>\n                            Added support for new tmx-exchange.com website! Updates for Nations ESWC are still paused\n                            at the moment.\n                        </li>\n                    </ul>\n                </div>\n                <Typography variant=\"body1\">Nov. 2021</Typography>\n                <div>\n                    <ul>\n                        <li>\n                            User Authentication via Ubisoft/Maniaplanet!!\n                            Right now it's probably useless for you since there are almost no benefits when logged in.\n                        </li>\n                        <li>\n                            Download button to public replays has been removed for older records because they might\n                            not be available anymore. Instead we provide backups from our servers. This service requires\n                            permission from us!\n                        </li>\n                    </ul>\n                </div>\n                <Padding />\n                <Typography variant=\"h5\">Changelog</Typography>\n                <SmallPadding />\n                {gitHub === undefined ? (\n                    <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                ) : gitHub.length === 0 ? (\n                    <CircularProgress className={classes.progress} />\n                ) : (\n                    <div style={{ overflowX: 'auto' }}>\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Branch</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Date</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Author</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Commit</Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {gitHub.map((commit, idx) => {\n                                    const { repo, branch } = branches[idx];\n                                    return (\n                                        <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                            <MinTableCell align=\"left\">\n                                                <Link\n                                                    color=\"inherit\"\n                                                    rel=\"noopener\"\n                                                    href={`https://github.com/${repo}/tree/${branch}`}\n                                                >\n                                                    {branch}\n                                                </Link>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={moment(commit.date).toString()}>\n                                                    <span>{moment(commit.date).from()}</span>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\">\n                                                {commit.author.html_url ? (\n                                                    <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                        {commit.author.login}\n                                                    </Link>\n                                                ) : (\n                                                    commit.author.name || 'n/a'\n                                                )}\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={commit.message}>\n                                                    <Link\n                                                        color=\"inherit\"\n                                                        rel=\"noopener\"\n                                                        href={`https://github.com/${repo}/commit/${commit.sha}`}\n                                                    >\n                                                        {commit.sha}\n                                                    </Link>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                )}\n                <Padding />\n                <Typography variant=\"h5\">Theme Settings</Typography>\n                <SmallPadding />\n                <FormGroup row>\n                    <FormControlLabel\n                        control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                        label=\"Dark Mode\"\n                    />\n                </FormGroup>\n                <Padding />\n                <Typography variant=\"h5\">Sources</Typography>\n                <SmallPadding />\n                <div>\n                    prod.trackmania.core.nadeo.online\n                </div>\n                <div>\n                    live-services.trackmania.nadeo.live\n                </div>\n                <div>\n                    competition.trackmania.nadeo.club\n                </div>\n                <div>\n                    <Link rel=\"noopener\" href=\"https://www.tm-exchange.com\">\n                        tm-exchange.com\n                    </Link>\n                </div>\n                <div>\n                    <Link rel=\"noopener\" href=\"https://tm.mania-exchange.com\">\n                        tm.mania-exchange.com\n                    </Link>\n                </div>\n                <div>\n                    <Link rel=\"noopener\" href=\"https://www.speedrun.com/tmwii\">\n                        speedrun.com/tmwii\n                    </Link>\n                </div>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default AboutView;\n","const cmpOptions = { numeric: true };\n\nexport const stableSort = (array, order, orderBy) => {\n    const desc = (a, b) => {\n        const aa = getPropFast(a, orderBy).toString();\n        const bb = getPropFast(b, orderBy).toString();\n        return bb.localeCompare(aa, undefined, cmpOptions);\n    };\n\n    const cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    const sort = (a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\nexport const stableSortSort = (array, order, orderBy, thenBy) => {\n    if (orderBy === thenBy || thenBy === undefined) {\n        return stableSort(array, order, orderBy);\n    }\n\n    const desc = (a, b) => {\n        let aa = getPropFast(a, orderBy).toString();\n        let bb = getPropFast(b, orderBy).toString();\n        const cmp = bb.localeCompare(aa, undefined, cmpOptions);\n        if (cmp !== 0) return cmp;\n        aa = getPropFast(a, thenBy).toString();\n        bb = getPropFast(b, thenBy).toString();\n        return bb.localeCompare(aa, undefined, cmpOptions);\n    };\n\n    const cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    const sort = (a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\nconst emptyObj = {};\n\n// Util which returns the value of nested objects by string: getPropFast({ a: { b: 3 } }, 'a.b') === 3\nconst getPropFast = (obj, path) =>\n    (path.indexOf('.') !== -1\n        ? path\n              .split('.')\n              .filter((s) => s)\n              .reduce((acc, val) => acc && acc[val], obj)\n        : obj[path]) || emptyObj;\n","const protocol = (game) => (['nations', 'sunrise', 'original'].includes(game) ? 'http' : 'https');\n\nexport default (game) =>\n    game === 'tm2'\n        ? {\n              trackUrl: (id) => `https://tm.mania-exchange.com/tracks/${id}`,\n              imageUrl: (id) => `https://tm.mania-exchange.com/tracks/screenshot/normal/${id}`,\n              replayUrl: (id) => `https://tm.mania-exchange.com/replays/download/${id}`,\n              userUrl: (id) => `https://tm.mania-exchange.com/user/profile/${id}`,\n          }\n        : game === 'tmwii'\n        ? {\n              trackUrl: (id) => `https://speedrun.com/tmwii/${id}`,\n              imageUrl: (id) => undefined,\n              replayUrl: (id) => undefined,\n              userUrl: (id) => `https://www.speedrun.com/user/${id}`,\n          }\n        : (() => ({\n              trackUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/trackshow/${id}`,\n              imageUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/trackshow/${id}/screen/1`,\n              replayUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/recordgbx/${id}`,\n              userUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/usershow/${id}`,\n          }))();\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSort, stableSortSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort, hasDuration }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {(hasDuration ? rows : rows.slice(0, -1)).map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game, hasDuration }) => {\n    const [{ order, orderBy, thenBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    hasDuration={hasDuration}\n                />\n                <TableBody>\n                    {(hasDuration ? stableSortSort : stableSort)(data, order, orderBy, thenBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row) => (\n                            <TableRow tabIndex={-1} key={row.user.id}>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={tmx(game).userUrl(row.user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                                {hasDuration && (\n                                    <MinTableCell align=\"left\">\n                                        {row.duration} day{row.duration === 1 ? '' : 's'}\n                                    </MinTableCell>\n                                )}\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import { scaleLinear } from 'd3-scale';\nimport moment from 'moment';\n\nexport function formatScore(score, game, type = undefined) {\n    if (score === undefined || score === null) {\n        return score;\n    }\n\n    if (type === 'Stunts') {\n        return score + ' pts.';\n    }\n\n    if (game !== 'tm2') {\n        score /= 10;\n\n        let csec = score % 100;\n        let tsec = Math.floor(score / 100);\n        let sec = tsec % 60;\n        let min = Math.floor(tsec / 60);\n\n        return (\n            (min > 0 ? min + ':' : '') + (sec < 10 && min > 0 ? '0' + sec : sec) + '.' + (csec < 10 ? '0' + csec : csec)\n        );\n    }\n\n    let msec = score % 1000;\n    let tsec = Math.floor(score / 1000);\n    let sec = tsec % 60;\n    let min = Math.floor(tsec / 60);\n\n    return (\n        (min > 0 ? min + ':' : '') +\n        (sec < 10 && min > 0 ? '0' + sec : sec) +\n        '.' +\n        (msec < 100 ? (msec < 10 ? '00' + msec : '0' + msec) : msec)\n    );\n}\n\n// credits: https://github.com/iVerb1/Portal2Boards/blob/master/public/js/date.js#L21\nconst hourScale = scaleLinear()\n    .domain([0, 24, 14 * 24, 2 * 30 * 24])\n    .range(['#2eb82e', '#258e25', '#cca300', '#e67300']);\n\nexport function getDateDifferenceColor(date) {\n    const passedHours = moment().diff(moment(date), 'hours');\n    return passedHours <= 2 * 30 * 24 ? hourScale(passedHours) : undefined;\n}\n\nconst minuteScale = scaleLinear()\n    .domain([0, 8 * 60, 16 * 60, 24 * 60])\n    .range(['#2eb82e', '#cca300', '#e67300', '#e63200']);\n\nexport function getDateTimeDifferenceColor(pastMinutes) {\n    return pastMinutes >= 0 && pastMinutes <= 24 * 60 ? minuteScale(pastMinutes) : undefined;\n}\n","import React from 'react';\nimport moment from 'moment';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst seasonMenu = [];\nlet yearMenu = [];\nconst totdMenu = [];\n\nconst now = moment();\nconst releaseDate = moment('2020-07-01')\n    .tz('Europe/Paris')\n    .set({\n        hour: 17,\n        minute: 0,\n        second: 0,\n    });\nconst currentMonth = releaseDate.clone();\n\nconst seasons = {\n    0: 'Winter',\n    1: 'Spring',\n    2: 'Summer',\n    3: 'Fall',\n};\n\nwhile (currentMonth.diff(now) < 0) {\n    const season = seasons[Math.floor(currentMonth.month() / 3)];\n    const year = currentMonth.format('YYYY');\n\n    if (yearMenu.indexOf(year) === -1) {\n        yearMenu.push(year);\n    }\n\n    seasonMenu.push(\n        <MenuItem value={`campaign/${season}-${year}`.toLowerCase()} key={seasonMenu.length}>\n            {season} {year}\n        </MenuItem>,\n    );\n\n    currentMonth.add(3, 'months');\n}\n\nseasonMenu.reverse();\ntotdMenu.reverse();\nyearMenu.reverse();\n\nseasonMenu.push(\n    <MenuItem value=\"campaign/training\" key={seasonMenu.length}>\n        Training\n    </MenuItem>,\n);\n\nyearMenu = yearMenu.map((year) => {\n    return (\n        <MenuItem value={year} key={year}>\n            {year}\n        </MenuItem>\n    );\n});\n\nconst getTotdMenu = (year) => {\n    const menu = [];\n\n    const isFirstYear = year.toString() === releaseDate.year().toString();\n\n    const month = isFirstYear ? releaseDate.clone() : moment(`${year}-01-01`);\n    const lastMonth = year.toString() === now.year().toString() ? now.month() : 11;\n\n    for (let i = month.month(); i <= lastMonth; ++i) {\n        const monthName = month.format('MMMM');\n\n        menu.push(\n            <MenuItem value={`totd/${monthName}-${year}`.toLowerCase()} key={menu.length}>\n                {monthName}\n            </MenuItem>,\n        );\n\n        month.add(1, 'month');\n    }\n\n    return menu;\n};\n\nconst getInitialValue = (official, year = undefined) => {\n    const isFirstYear = year && year.toString() === releaseDate.year().toString();\n    const month = (isFirstYear ? releaseDate : now).clone();\n\n    return (official\n        ? `campaign/${seasons[Math.floor(now.month() / 3)]}-${now.year()}`\n        : `totd/${month.format('MMMM')}-${year ? year : now.year()}`\n    ).toLowerCase();\n};\n\nexport { seasonMenu, yearMenu, getTotdMenu, getInitialValue };\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { stableSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game, stats, useLiveDuration }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const tmxGame = tmx(game);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => {\n                            const score = formatScore(wr.score, game, wr.track.type);\n\n                            return (\n                                <TableRow tabIndex={-1} key={`${wr.track.name}-${wr.user.id}`}>\n                                    {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                        <MinTableCell\n                                            style={noWrap}\n                                            rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records}\n                                            align=\"left\"\n                                        >\n                                            <Link\n                                                color=\"inherit\"\n                                                href={tmxGame.trackUrl(wr.track.id)}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                            >\n                                                {wr.track.name}\n                                            </Link>\n                                        </MinTableCell>\n                                    )}\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip title=\"Download Replay\" placement=\"bottom-end\" enterDelay={300}>\n                                            <Link\n                                                style={noWrap}\n                                                color=\"inherit\"\n                                                href={tmxGame.replayUrl(wr.replay)}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                            >\n                                                {score}\n                                            </Link>\n                                        </Tooltip>\n                                        {game === 'tm2' && moment(wr.date).isBefore('2017-05-09') && (\n                                            <Tooltip\n                                                title=\"This run was done on an older game version.\"\n                                                placement=\"bottom-end\"\n                                                enterDelay={300}\n                                            >\n                                                <span>\n                                                    <IconButton size=\"small\" disabled>\n                                                        <WarningIcon fontSize=\"inherit\" />\n                                                    </IconButton>\n                                                </span>\n                                            </Tooltip>\n                                        )}\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Link\n                                            style={noWrap}\n                                            color=\"inherit\"\n                                            href={tmxGame.userUrl(wr.user.id)}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {wr.user.name}\n                                        </Link>\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip\n                                            title={<Moment fromNow>{wr.date}</Moment>}\n                                            placement=\"bottom-end\"\n                                            enterDelay={300}\n                                        >\n                                            <Moment\n                                                style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                                format=\"YYYY-MM-DD\"\n                                            >\n                                                {wr.date}\n                                            </Moment>\n                                        </Tooltip>\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                            {useLiveDuration ? (\n                                                <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                            ) : (\n                                                <span>{wr.duration}</span>\n                                            )}\n                                        </Tooltip>\n                                    </MinTableCell>\n                                </TableRow>\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                    {stats.totalPoints > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Points</MinTableCell>\n                            <MinTableCell>\n                                <span>{formatScore(stats.totalPoints, game, 'Stunts')}</span>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","export default {\n    trackUrl: (level, category) => `https://speedrun.com/tmwii/${level}#${category}`,\n    userUrl: (name) => `https://www.speedrun.com/user/${name}`,\n    runUrl: (id) => `https://www.speedrun.com/tmwii/run/${id}`,\n};\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { stableSort } from '../utils/stableSort';\nimport srcom from '../utils/srcom';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n    { id: 'replay', sortable: false, label: 'Video', align: 'left' },\n];\n\nconst RecordsTableSrcomHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTableSrcom = ({ data, game, stats, useLiveDuration, category }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableSrcomHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => (\n                            <TableRow tabIndex={-1} key={`${wr.track.name}-${wr.user.id}`}>\n                                {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                    <MinTableCell\n                                        style={noWrap}\n                                        rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records}\n                                        align=\"left\"\n                                    >\n                                        <Link\n                                            color=\"inherit\"\n                                            href={srcom.trackUrl(wr.track.name, category)}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {wr.track.name}\n                                        </Link>\n                                    </MinTableCell>\n                                )}\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={srcom.runUrl(wr.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {formatScore(wr.score, game)}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={srcom.userUrl(wr.user.name)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {wr.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip\n                                        title={<Moment fromNow>{wr.date}</Moment>}\n                                        placement=\"bottom-end\"\n                                        enterDelay={300}\n                                    >\n                                        <Moment\n                                            style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                            format=\"YYYY-MM-DD\"\n                                        >\n                                            {wr.date}\n                                        </Moment>\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                        {useLiveDuration ? (\n                                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                        ) : (\n                                            <span>{wr.duration}</span>\n                                        )}\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"Watch Run\" placement=\"bottom-end\" enterDelay={300}>\n                                        <IconButton size=\"small\" href={wr.media} target=\"_blank\">\n                                            <PlayArrowIcon fontSize=\"inherit\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={4}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTableSrcom;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default ({ data, props }) => (\n    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }} {...props}>\n        {data}\n    </Typography>\n);\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst randomColor = () => '#' + ((Math.random() * 0xffffff) << 0).toString(16).padStart(6, '0');\n\nconst MAX_DATAPOINTS = 30;\n\nconst RecordsChart = ({ labels, series, title, theme, rest = true }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    if (rest && series.length > MAX_DATAPOINTS) {\n        const rest = series.slice(MAX_DATAPOINTS).reduce((acc, val) => (acc += val), 0);\n\n        series = series.slice(0, MAX_DATAPOINTS);\n        labels = labels.slice(0, MAX_DATAPOINTS);\n\n        series.push(rest);\n        labels.push('Rest');\n    }\n\n    const colors = new Array(series.length).fill(0).map(() => randomColor());\n\n    return (\n        <Chart\n            options={{\n                labels,\n                legend: {\n                    show: false,\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px',\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    pie: {\n                        donut: {\n                            labels: {\n                                show: true,\n                                name: {\n                                    show: true,\n                                },\n                                value: {\n                                    show: true,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                                total: {\n                                    show: true,\n                                    label: title,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                            },\n                        },\n                    },\n                },\n                colors,\n            }}\n            series={series}\n            type=\"donut\"\n            height=\"400\"\n        />\n    );\n};\n\nexport default withTheme(RecordsChart);\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { useScroll } from '../Hooks';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    fab: {\n        margin: 0,\n        top: 'auto',\n        right: 30,\n        bottom: 30,\n        left: 'auto',\n        position: 'fixed',\n    },\n}));\n\nconst jumpToTop = () => {\n    const smoothScroll = () => {\n        const y = document.documentElement.scrollTop;\n        if (y > 0) {\n            window.requestAnimationFrame(smoothScroll);\n            window.scrollTo(0, y - y / 5);\n        }\n    };\n    smoothScroll();\n};\n\nconst FloatingActionButton = () => {\n    const { y } = useScroll();\n    const classes = useStyles();\n\n    return (\n        <Zoom in={y !== 0} timeout={1000}>\n            <Fab title=\"Jump to top\" color=\"primary\" className={classes.fab} onClick={jumpToTop}>\n                <KeyboardArrowUpIcon />\n            </Fab>\n        </Zoom>\n    );\n};\n\nexport default FloatingActionButton;\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport RankingsTable from '../components/RankingsTable';\nimport RecordsTable from '../components/RecordsTable';\nimport RecordsTableSrcom from '../components/RecordsTableSrcom';\nimport SimpleTitle from '../components/SimpleTitle';\nimport RecordsChart from '../components/RecordsChart';\nimport { makeStyles } from '@material-ui/core';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport Api from '../Api';\nimport { useIsMounted } from '../Hooks';\nimport ViewContent from './ViewContent';\n\nconst useStyles = makeStyles((_) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n}));\n\nconst GameView = ({ match }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [gameName, setGameName] = React.useState('tm2');\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.params[0];\n    const date = match.params.date;\n    const useLiveDuration = date === undefined || date === 'latest';\n\n    React.useEffect(() => {\n        setTab(0);\n        setGame(undefined);\n    }, [page]);\n\n    React.useEffect(() => {\n        Api.request(page, date)\n            .then((game) => {\n                if (game[0] && game[0].tracks[0].wrs) {\n                    for (const campaign of game) {\n                        if (campaign.stats.totalPoints === undefined) {\n                            campaign.stats.totalTime = campaign.tracks\n                                .filter((t) => t.type !== 'Stunts')\n                                .map((t) => t.wrs[0].score)\n                                .reduce((a, b) => a + b, 0);\n                            campaign.stats.totalPoints = campaign.tracks\n                                .filter((t) => t.type === 'Stunts')\n                                .map((t) => t.wrs[0].score)\n                                .reduce((a, b) => a + b, 0);\n                        }\n    \n                        const rows = [];\n                        for (const track of campaign.tracks) {\n                            for (const wr of track.wrs) {\n                                const duration = useLiveDuration ? moment().diff(moment(wr.date), 'd') : wr.duration;\n                                rows.push({\n                                    track: {\n                                        id: track.id,\n                                        name: track.name,\n                                        type: track.type,\n                                        isFirst: wr === track.wrs[0],\n                                        records: track.wrs.length,\n                                    },\n                                    ...wr,\n                                    duration,\n                                });\n                            }\n                        }\n    \n                        campaign.tracks = rows;\n    \n                        if (useLiveDuration) {\n                            campaign.leaderboard.forEach((entry, idx) => {\n                                campaign.leaderboard[idx].duration = campaign.tracks\n                                    .filter((r) => r.user.id === entry.user.id)\n                                    .map((r) => r.duration)\n                                    .reduce((a, b) => a + b, 0);\n                            });\n                        }\n                    }\n                }\n    \n                if (!isMounted.current) return;\n                setGameName(page);\n                setGame(game);\n            })\n            .catch(console.error);\n    }, [isMounted, page, date, useLiveDuration]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const Table = gameName === 'tmwii' ? RecordsTableSrcom : RecordsTable;\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper>\n                {game === undefined ? (\n                    <LinearProgress />\n                ) : game.length === 0 ? (\n                    <SimpleTitle data=\"No data.\" />\n                ) : (\n                    <>\n                        {game.length > 1 && (\n                            <Tabs\n                                value={tab}\n                                onChange={handleTab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"auto\"\n                            >\n                                {game.map((campaign) => (\n                                    <Tab label={campaign.name} key={campaign.name} />\n                                ))}\n                            </Tabs>\n                        )}\n                        <Typography component=\"div\" role=\"tabpanel\">\n                            <Box p={3}>\n                                <Grid container direction=\"column\" justify=\"center\">\n                                    <Grid item xs={12}>\n                                        <Table\n                                            data={game[tab].tracks}\n                                            game={gameName}\n                                            stats={game[tab].stats}\n                                            useLiveDuration={useLiveDuration}\n                                            category={game[tab].name}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} className={classes.padTop}>\n                                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                            <Grid item xs={12} md={6}>\n                                                <RankingsTable\n                                                    data={game[tab].leaderboard}\n                                                    game={page}\n                                                    hasDuration={true}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Grid container direction=\"column\" justify=\"center\">\n                                                    <Grid item xs={12}>\n                                                        <RecordsChart\n                                                            title=\"WRs\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.wrs)}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} className={classes.padTop}>\n                                                        <RecordsChart\n                                                            title=\"Duration\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.duration)}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Typography>\n                    </>\n                )}\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(GameView);\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleTitle from '../components/SimpleTitle';\nimport ViewContent from './ViewContent';\n\nconst NotFoundView = () => {\n    return (\n        <ViewContent>\n            <Paper>\n                <SimpleTitle data=\"Page not found :(\" />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ViewContent from './ViewContent';\nimport { useIsMounted } from '../Hooks';\nimport { useTheme } from '@material-ui/core';\n\nconst Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst defaultReplay = {\n    info: 'drag & drop replay here :)',\n    magic: 'GBX',\n    version: 6,\n    settings: 'BUCR',\n    classId: 50933760,\n    headerSize: 331,\n    headerChunks: 2,\n    chunkOffset: 348,\n};\n\nconst ReplayView = () => {\n    const isMounted = useIsMounted();\n    const theme = useTheme();\n    const file = React.useRef(null);\n\n    const [replay, setReplay] = React.useState(defaultReplay);\n    const [parseGhost, setParseGhost] = React.useState(true);\n    const [errorMessage, setErrorMessage] = React.useState(false);\n\n    const handleClose = (_, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setErrorMessage(false);\n    };\n\n    const handleParseGhost = (event) => {\n        setParseGhost(event.target.checked);\n    };\n\n    const parseReplay = React.useCallback(\n        (file) => {\n            if (!file) return;\n\n            const reader = new FileReader();\n            reader.onload = ({ target: { result } }) => {\n                try {\n                    if (!isMounted.current) return;\n                    setReplay(defaultReplay);\n                    setErrorMessage(false);\n\n                    const { Buffer, Replay } = window;\n\n                    const replay = (window.replay = Replay.default().read(Buffer.from(result), { parseGhost }));\n                    if (!isMounted.current) return;\n\n                    const removeData = (obj) => {\n                        Object.keys(obj).forEach((key) => {\n                            if (key === '_view') {\n                                delete obj._view;\n                            } else if (typeof obj[key] === 'object') {\n                                removeData(obj[key]);\n                            }\n                        });\n                    };\n\n                    if (replay.ghost) {\n                        delete replay.ghost.restData;\n                    }\n\n                    removeData(replay);\n                    setReplay(replay);\n                } catch (err) {\n                    if (isMounted.current) {\n                        setErrorMessage(err.message);\n                    }\n                }\n            };\n            reader.readAsArrayBuffer(file);\n        },\n        [isMounted, parseGhost, setReplay, setErrorMessage],\n    );\n\n    const handleChange = React.useCallback((ev) => parseReplay(ev.target.files[0]), [parseReplay]);\n\n    const dropHandler = (ev) => {\n        ev.preventDefault();\n\n        const files = [];\n\n        if (ev.dataTransfer.items) {\n            for (let i = 0; i < ev.dataTransfer.items.length; ++i) {\n                if (ev.dataTransfer.items[i].kind === 'file') {\n                    files.push(ev.dataTransfer.items[i].getAsFile());\n                }\n            }\n        }\n\n        parseReplay(files[0]);\n        removeDragData(ev);\n    };\n\n    const dragOverHandler = (ev) => {\n        ev.preventDefault();\n    };\n\n    const removeDragData = (ev) => {\n        if (ev.dataTransfer.items) {\n            ev.dataTransfer.items.clear();\n        } else {\n            ev.dataTransfer.clearData();\n        }\n    };\n\n    React.useEffect(() => {\n        file.current && file.current.addEventListener('change', handleChange);\n        return () => file.current && file.current.removeEventListener('change', handleChange);\n    }, [file, handleChange]);\n\n    const openFile = React.useCallback(() => {\n        file.current.click();\n    }, [file]);\n\n    return (\n        <ViewContent>\n            <Paper style={{ padding: '20px 20px 20px 20px' }}>\n                <Button variant=\"contained\" color=\"primary\" disableElevation onClick={openFile}>\n                    Open file\n                </Button>\n                <input type=\"file\" ref={file} style={{ display: 'none' }} />\n                <FormControlLabel\n                    style={{ marginLeft: '20px' }}\n                    control={<Checkbox color=\"primary\" checked={parseGhost} onChange={handleParseGhost} />}\n                    label=\"Parse Ghost\"\n                />\n                <div style={{ paddingBottom: '20px' }}></div>\n                <div onDrop={dropHandler} onDragOver={dragOverHandler}>\n                    <ReactJson\n                        name=\"replay\"\n                        style={{ fontSize: '14px' }}\n                        src={replay}\n                        theme={theme.palette.type === 'light' ? 'bright:inverted' : 'solarized'}\n                        displayDataTypes={false}\n                        displayObjectSize={false}\n                        enableClipboard={false}\n                    />\n                </div>\n                <Snackbar open={errorMessage !== false} autoHideDuration={6000} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"error\">\n                        {errorMessage}\n                    </Alert>\n                </Snackbar>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default ReplayView;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSort, stableSortSort } from '../utils/stableSort';\n\nconst rowsOficial = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'user.name', sortable: true, label: 'World Records', align: 'left' },\n];\n\nconst rowsTotd = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', sortable: true, label: 'World Records', align: 'left' },\n];\n\nconst rowsCompetition = [\n    { id: 'user.displayName', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wins.matches', sortable: true, label: 'Wins', align: 'left', tooltip: 'Amount of match wins.' },\n    { id: 'wins.qualifiers', sortable: true, label: 'Qualifiers', align: 'left', tooltip: 'Amount of qualifier wins.' },\n];\n\nconst rowsCotd = [\n    { id: 'user.displayName', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wins.matches', sortable: true, label: 'Wins', align: 'left', tooltip: 'Amount of match wins.' },\n    { id: 'wins.qualifiers', sortable: true, label: 'Qualifiers', align: 'left', tooltip: 'Amount of qualifier wins.' },\n    {\n        id: 'wins.hattricks',\n        sortable: true,\n        label: 'Hat-Tricks',\n        align: 'left',\n        tooltip: 'A hat-trick can be achieved by winning the qualifier, the match and Track of the Day.',\n    },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort, isOfficial, cotd, hattricks }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    const rows = isOfficial ? rowsOficial : cotd ? (hattricks ? rowsCotd : rowsCompetition) : rowsTotd;\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip\n                                title={row.tooltip ?? 'Sort by ' + row.label}\n                                placement=\"bottom-start\"\n                                enterDelay={300}\n                            >\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'user.name',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst linkToTrackmaniaIoProfile = (user) => {\n    return `https://trackmania.io/#/player/${encodeURIComponent(user.id ?? user.accountId)}`;\n};\n\nconst RecordsTable = ({ data, isOfficial, cotd, hattricks }) => {\n    const [{ order, orderBy, thenBy }, setState] = React.useState({\n        ...defaultState,\n        orderBy: cotd ? 'wins.matches' : 'wrs',\n    });\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    React.useEffect(() => {\n        setState((s) => ({ ...s, orderBy: cotd ? 'wins.matches' : 'wrs', thenBy: cotd ? 'wins.matches' : 'wrs' }));\n    }, [data, isOfficial]);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    isOfficial={isOfficial}\n                    cotd={cotd}\n                    hattricks={hattricks}\n                />\n                <TableBody>\n                    {(isOfficial ? stableSortSort : stableSort)(data, order, orderBy, thenBy).map((row) => (\n                        <TableRow tabIndex={-1} key={row.user.id ?? row.user.accountId}>\n                            {!cotd && (\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        color=\"inherit\"\n                                        href={linkToTrackmaniaIoProfile(row.user)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.user.name}\n                                    </Link>\n                                </MinTableCell>\n                            )}\n                            {!cotd && <MinTableCell align=\"left\">{row.wrs}</MinTableCell>}\n                            {cotd && (\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        color=\"inherit\"\n                                        href={linkToTrackmaniaIoProfile(row.user)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.user.displayName}\n                                    </Link>\n                                </MinTableCell>\n                            )}\n                            {cotd && (\n                                <>\n                                    <MinTableCell align=\"left\">{row.wins.matches}</MinTableCell>\n                                    <MinTableCell align=\"left\">{row.wins.qualifiers}</MinTableCell>\n                                    {hattricks && <MinTableCell align=\"left\">{row.wins.hattricks}</MinTableCell>}\n                                </>\n                            )}\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport HistoryIcon from '@material-ui/icons/History';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { stableSort } from '../utils/stableSort';\nimport { useLocalStorage } from '../Hooks';\nimport { formatScore, getDateDifferenceColor, getDateTimeDifferenceColor } from '../utils/tools';\n\nconst rowsOfficial = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'zone', sortable: true, label: 'Zone', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst rowsTOTD = [\n    { id: 'track.monthDay', sortable: true, label: 'Day', align: 'left' },\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'zone', sortable: true, label: 'Zone', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort, official }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    const rows = official ? rowsOfficial : rowsTOTD;\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row, idx) => (\n                    <TableCell\n                        key={idx}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                        colSpan={idx === rows.length - 1 ? 2 : 1}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst linkToTrackmaniaIoLeaderboard = (track) => {\n    return `https://trackmania.io/#/leaderboard/${encodeURIComponent(track.id)}`;\n};\n\nconst linkToTrackmaniaIoProfile = (user) => {\n    return `https://trackmania.io/#/player/${encodeURIComponent(user.id)}`;\n};\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nconst RecordsHistoryRow = ({ wr, official, showDownloadButton }) => {\n    const score = formatScore(wr.score, 'tm2');\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, 'tm2') : null;\n\n    return (\n        <TableRow tabIndex={-1}>\n            {official && (\n                <MinTableCell align=\"left\">\n                    <Tooltip title={<Moment format=\"HH:mm\">{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n            )}\n            {!official && (\n                <MinTableCell align=\"left\">\n                    <Tooltip title={wr.setAfter} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment style={{ color: getDateTimeDifferenceColor(wr.pastMinutes), ...noWrap }} format=\"HH:mm\">\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n            )}\n            <MinTableCell align=\"left\">\n                {score}\n                {wr.note && (\n                    <Tooltip title={wr.note} placement=\"bottom-end\" enterDelay={300}>\n                        <span>\n                            <IconButton size=\"small\" disabled>\n                                <WarningIcon fontSize=\"inherit\" />\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                )}\n            </MinTableCell>\n            <MinTableCell align=\"left\">{delta ? '-' + delta : ''}</MinTableCell>\n            <MinTableCell align=\"left\">\n                <Link color=\"inherit\" href={linkToTrackmaniaIoProfile(wr.user)} rel=\"noreferrer\" target=\"_blank\">\n                    {wr.user.name}\n                </Link>\n            </MinTableCell>\n            <MinTableCell align=\"left\">\n                <Tooltip title={wr.user.zone.map((zone) => zone.name).join(' | ')} placement=\"bottom\" enterDelay={300}>\n                    <span>{(wr.user.zone[2] ? wr.user.zone[2] : wr.user.zone[0]).name}</span>\n                </Tooltip>\n            </MinTableCell>\n            {showDownloadButton && (\n                <MinTableCell align=\"left\">\n                    <Tooltip title=\"Download Ghost\" placement=\"bottom\" enterDelay={300}>\n                        <IconButton\n                            size=\"small\"\n                            style={noWrap}\n                            color=\"inherit\"\n                            href={wr.replayUrl}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                            disabled={!wr.replay}\n                        >\n                            <SaveAltIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Tooltip>\n                    {/* {wr.internal_note && (\n                        <Tooltip\n                            title={wr.internal_note}\n                            placement=\"bottom-end\"\n                            enterDelay={300}\n                        >\n                            <span>\n                                <IconButton size=\"small\" disabled>\n                                    <WarningIcon fontSize=\"inherit\" />\n                                </IconButton>\n                            </span>\n                        </Tooltip>\n                    )} */}\n                </MinTableCell>\n            )}\n        </TableRow>\n    );\n};\n\nconst RecordsRow = ({ wr, official, orderBy, useLiveDuration, history, onClickHistory, showDownloadButton }) => {\n    const score = formatScore(wr.score, 'tm2');\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, 'tm2') : null;\n\n    const classes = useRowStyles();\n\n    const open = history === wr.track.id;\n    const defaultSort = orderBy === 'track.monthDay' || orderBy === 'track.name';\n\n    return (\n        <>\n            <TableRow tabIndex={-1}>\n                {!official && (wr.track.isFirst || !defaultSort) && (\n                    <MinTableCell align=\"left\" rowSpan={defaultSort ? wr.track.records : 1}>\n                        {wr.track.monthDay}\n                    </MinTableCell>\n                )}\n                {(wr.track.isFirst || !defaultSort) && (\n                    <MinTableCell style={noWrap} rowSpan={defaultSort ? wr.track.records : 1} align=\"left\">\n                        <Link\n                            color=\"inherit\"\n                            href={linkToTrackmaniaIoLeaderboard(wr.track)}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            {wr.track.name}\n                        </Link>\n                    </MinTableCell>\n                )}\n                <MinTableCell align=\"left\">\n                    {official && delta && (\n                        <Tooltip title={<span>-{delta} to former record</span>} placement=\"bottom\" enterDelay={300}>\n                            <span>{score}</span>\n                        </Tooltip>\n                    )}\n                    {official && !delta && <span>{score}</span>}\n                    {!official && delta && (\n                        <Tooltip title={<span>-{delta} to former record</span>} placement=\"bottom\" enterDelay={300}>\n                            <span>{score}</span>\n                        </Tooltip>\n                    )}\n                    {!official && !delta && <span>{score}</span>}\n                </MinTableCell>\n                <MinTableCell style={noWrap} align=\"left\">\n                    <Link color=\"inherit\" href={linkToTrackmaniaIoProfile(wr.user)} rel=\"noreferrer\" target=\"_blank\">\n                        {wr.user.name}\n                    </Link>\n                </MinTableCell>\n                <MinTableCell style={noWrap} align=\"left\">\n                    <Tooltip\n                        title={wr.user.zone.map((zone) => zone.name).join(' | ')}\n                        placement=\"bottom\"\n                        enterDelay={300}\n                    >\n                        <span>{(wr.user.zone[2] ? wr.user.zone[2] : wr.user.zone[0]).name}</span>\n                    </Tooltip>\n                </MinTableCell>\n                {official && (\n                    <>\n                        <MinTableCell align=\"left\">\n                            <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                                <Moment\n                                    style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                    format=\"YYYY-MM-DD\"\n                                >\n                                    {wr.date}\n                                </Moment>\n                            </Tooltip>\n                        </MinTableCell>\n                        <MinTableCell align=\"left\">\n                            <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                {useLiveDuration ? (\n                                    <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                ) : (\n                                    <span>{wr.duration}</span>\n                                )}\n                            </Tooltip>\n                        </MinTableCell>\n                    </>\n                )}\n                <MinTableCell style={noWrap} align=\"left\">\n                    <Tooltip title=\"Download Ghost\" placement=\"bottom\" enterDelay={300}>\n                        <IconButton\n                            size=\"small\"\n                            style={noWrap}\n                            color=\"inherit\"\n                            href={showDownloadButton ? wr.replayUrl : wr.replayUrlPublic}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <SaveAltIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Tooltip>\n                    {wr.track.isLast && wr.track.history && (\n                        <IconButton\n                            color=\"inherit\"\n                            size=\"small\"\n                            style={noWrap}\n                            onClick={() => onClickHistory(wr.track.id)}\n                        >\n                            <HistoryIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    )}\n                </MinTableCell>\n            </TableRow>\n            {wr.track.isLast && wr.track.history && (\n                <TableRow className={classes.root}>\n                    <MinTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                            <Box margin={1}>\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                    History\n                                </Typography>\n                                <Table size=\"small\" aria-label=\"purchases\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <MinTableCell>{official ? 'Date' : 'Time'}</MinTableCell>\n                                            <MinTableCell>Record</MinTableCell>\n                                            <MinTableCell>Timesave</MinTableCell>\n                                            <MinTableCell>Player</MinTableCell>\n                                            <MinTableCell colSpan={showDownloadButton ? 2 : 1}>Zone</MinTableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {wr.track.history.map((historyWr, idx) => {\n                                            return <RecordsHistoryRow wr={historyWr} official={official} key={idx} showDownloadButton={showDownloadButton} />;\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </Box>\n                        </Collapse>\n                    </MinTableCell>\n                </TableRow>\n            )}\n        </>\n    );\n};\n\nconst RecordsTable = ({ data, stats, official, useLiveDuration, showDownloadButton }) => {\n    const [storage, setStorage] = useLocalStorage('tm2020', {\n        official: { order: 'asc', orderBy: 'track.name' },\n        totd: { order: 'asc', orderBy: 'track.monthDay' },\n    });\n\n    const [{ order, rowsPerPage, page, ...state }, setState] = React.useState(defaultState);\n    const [history, setHistory] = React.useState(null);\n\n    let { orderBy } = state;\n    orderBy = official ? storage.official.orderBy : storage.totd.orderBy;\n    orderBy = official && orderBy === 'track.monthDay' ? 'track.name' : orderBy;\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        setState((state) => {\n            const order = state.orderBy === orderBy && state.order === 'desc' ? 'asc' : 'desc';\n            setStorage({ ...storage, [official ? 'official' : 'totd']: { order, orderBy } });\n\n            return {\n                ...state,\n                order,\n                orderBy,\n            };\n        });\n    };\n\n    React.useEffect(() => {\n        const savedState = storage[official ? 'official' : 'totd'];\n        setState((state) => ({ ...state, order: savedState.order, orderBy: savedState.orderBy }));\n    }, [data]);\n\n    const onClickHistory = React.useCallback(\n        (id) => {\n            if (history !== id) {\n                setHistory(id);\n            } else {\n                setHistory(null);\n            }\n        },\n        [history, setHistory],\n    );\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    official={official}\n                />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr, idx) => {\n                            return (\n                                <RecordsRow\n                                    wr={wr}\n                                    official={official}\n                                    orderBy={orderBy}\n                                    useLiveDuration={useLiveDuration}\n                                    history={history}\n                                    onClickHistory={onClickHistory}\n                                    key={idx}\n                                    showDownloadButton={showDownloadButton}\n                                />\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\" colSpan={official ? 1 : 2}>\n                                Total Time\n                            </MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, 'tm2')}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={official ? 5 : 3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst UniqueRecordsChart = ({ labels, series, title, theme }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    return (\n        <Chart\n            options={{\n                xaxis: {\n                    categories: labels,\n                },\n                legend: {\n                    show: false,\n                },\n                dataLabels: {\n                    enabled: false,\n                },\n                chart: {\n                    toolbar: {\n                        show: false,\n                    },\n                    foreColor: isDarkTheme ? 'white' : 'black',\n                },\n                tooltip: {\n                    theme: isDarkTheme ? 'dark' : 'light',\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px',\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    bar: {\n                        horizontal: true,\n                    },\n                },\n            }}\n            series={series}\n            type=\"bar\"\n            height=\"800\"\n        />\n    );\n};\n\nexport default withTheme(UniqueRecordsChart);\n","import React from 'react';\nimport moment from 'moment';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nlet yearMenu = [];\nconst totdMenu = [];\n\nconst now = moment();\nconst firstCotdDate = moment('2020-11-02');\nconst currentMonth = firstCotdDate.clone();\n\nwhile (currentMonth.diff(now) < 0) {\n    const year = currentMonth.format('YYYY');\n\n    if (yearMenu.indexOf(year) === -1) {\n        yearMenu.push(year);\n    }\n\n    currentMonth.add(1, 'months');\n}\n\ntotdMenu.reverse();\nyearMenu.reverse();\n\nyearMenu = yearMenu.map((year) => {\n    return (\n        <MenuItem value={year} key={year}>\n            {year}\n        </MenuItem>\n    );\n});\n\nconst getCotdMenu = (year) => {\n    const menu = [];\n\n    const isFirstYear = year.toString() === firstCotdDate.year().toString();\n\n    const month = isFirstYear ? firstCotdDate.clone() : moment(`${year}-01-01`);\n    const lastMonth = year.toString() === now.year().toString() ? now.month() : 11;\n\n    for (let i = month.month(); i <= lastMonth; ++i) {\n        const monthName = month.format('MMMM');\n\n        menu.push(\n            <MenuItem value={monthName.toLowerCase()} key={menu.length}>\n                {monthName}\n            </MenuItem>,\n        );\n\n        month.add(1, 'month');\n    }\n\n    return menu;\n};\n\nconst getInitialCompetitionValue = (year) => {\n    const isFirstYear = year && year.toString() === firstCotdDate.year().toString();\n    const month = (isFirstYear ? firstCotdDate : now).clone();\n    return month.format('MMMM').toLowerCase();\n};\n\nconst competitionMenu = [\n    <MenuItem value=\"competitions/cotd\" key={0}>\n        Cup of the Day\n    </MenuItem>,\n    <MenuItem value=\"competitions/a08forever\" key={1}>\n        A08 Forever\n    </MenuItem>\n];\n\nexport { competitionMenu, yearMenu, getCotdMenu, getInitialCompetitionValue };\n","import React from 'react';\nimport moment from 'moment-timezone';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport RankingsTable from '../RankingsTableTrackmania';\nimport RecordsTable from '../RecordsTableTrackmania';\nimport RecordsChart from '../RecordsChart';\nimport SimpleTitle from '../SimpleTitle';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Api, { api2 } from '../../Api';\nimport { useIsMounted } from '../../Hooks';\nimport AppState from '../../AppState';\nimport { Permissions } from '../../models/Permissions';\nimport { seasonMenu, yearMenu, getTotdMenu } from './CampaignMenus';\n\nconst s = (value) => (value === 1 ? '' : 's');\n\nconst calculateSetAfter = (releasedAt, wrDate) => {\n    const diffSeconds = wrDate.diff(releasedAt, 'seconds');\n    const setAfterHours = wrDate.diff(releasedAt, 'hours');\n    if (diffSeconds > 0) {\n        const setAfterMinutes = wrDate.diff(releasedAt, 'minutes') - setAfterHours * 60;\n        return `set after ${setAfterHours} hour${s(setAfterHours)} and ${setAfterMinutes} minute${s(setAfterMinutes)}`;\n    } else {\n        const setBeforeHours = -setAfterHours;\n        const setBeforeMinutes = -wrDate.diff(releasedAt, 'minutes') - setBeforeHours * 60;\n        return `set before ${setBeforeHours} hour${s(setBeforeHours)} and ${setBeforeMinutes} minute${s(\n            setBeforeMinutes,\n        )}`;\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst CampaignTab = ({ campaign, onChangeCampaign, onChangeYear, isOfficial, year }) => {\n    const {\n        state: { user },\n    } = React.useContext(AppState);\n\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [rankingsType, setRankingsType] = React.useState('leaderboard');\n\n    const onChangeRankingsType = React.useCallback(\n        (event) => {\n            setRankingsType(event.target.value);\n        },\n        [setRankingsType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request('trackmania', campaign)\n            .then((campaign) => {\n                const rows = [];\n                for (const track of campaign.tracks) {\n                    for (const wr of track.wrs) {\n                        const wrDate = moment(wr.date);\n                        const releasedAt = !campaign.isOfficial\n                            ? moment()\n                                  .tz('Europe/Paris')\n                                  .set({\n                                      year: campaign.year,\n                                      month: campaign.month - 1,\n                                      date: track.monthDay,\n                                      hour: 19,\n                                      minute: 0,\n                                      second: 0,\n                                  })\n                                  .utc()\n                            : undefined;\n\n                        const setAfter = !campaign.isOfficial ? calculateSetAfter(releasedAt, wrDate) : undefined;\n\n                        const isLast = wr === track.wrs[track.wrs.length - 1];\n                        const history = isLast && (track.history || []).length > 1 ? track.history : undefined;\n\n                        if (history && !campaign.isOfficial) {\n                            history.forEach((historyWr) => {\n                                const historyWrDate = moment(historyWr.date);\n                                historyWr.setAfter = calculateSetAfter(releasedAt, historyWrDate);\n                                historyWr.pastMinutes = historyWrDate.diff(releasedAt, 'minutes');\n                                historyWr.replayUrl = api2.replayUrl(historyWr.replay);\n                            });\n                        } else if (history) {\n                            history.forEach((historyWr) => {\n                                historyWr.replayUrl = api2.replayUrl(historyWr.replay);\n                            });\n                        }\n\n                        rows.push({\n                            track: {\n                                id: track.id,\n                                name: track.name.replace(/(\\$[0-9a-fA-F]{1,3}|\\$[WNOITSGZBEMwnoitsgzbem]{1})/g, ''),\n                                monthDay: track.monthDay,\n                                isFirst: wr === track.wrs[0],\n                                isLast,\n                                records: track.wrs.length,\n                                history,\n                            },\n                            ...wr,\n                            replayUrl: api2.replayUrl(wr.replay),\n                            replayUrlPublic: `https://prod.trackmania.core.nadeo.online/storageObjects/${wr.replay}`,\n                            zone: (wr.user.zone[2] ? wr.user.zone[2] : wr.user.zone[0]).name,\n                            setAfter,\n                        });\n                    }\n                }\n\n                campaign.tracks = rows;\n\n                if (isMounted.current) {\n                    setGame(campaign);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [isMounted, campaign]);\n\n    \n    const showDownloadButton = React.useMemo(() => {\n        return user.isLoggedIn() && user.hasPermission(Permissions.trackmania_DOWNLOAD_FILES);\n    }, [user.profile]);\n\n    const rankingsCountryType = rankingsType\n        .replace('Leaderboard', 'CountryLeaderboard')\n        .replace('leaderboard', 'countryLeaderboard');\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {isOfficial ? (\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Campaign</InputLabel>\n                    <Select value={campaign} onChange={onChangeCampaign}>\n                        {seasonMenu}\n                    </Select>\n                </FormControl>\n            ) : (\n                <>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>Year</InputLabel>\n                        <Select value={year} onChange={onChangeYear}>\n                            {yearMenu}\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>Month</InputLabel>\n                        <Select value={campaign} onChange={onChangeCampaign}>\n                            {getTotdMenu(year)}\n                        </Select>\n                    </FormControl>\n                </>\n            )}\n            {game === null && <SimpleTitle data=\"No data.\" />}\n            {game === undefined && <LinearProgress />}\n            <Grid container direction=\"column\" justify=\"center\">\n                {game !== undefined && game !== null && (\n                    <>\n                        <Grid item xs={12}>\n                            <RecordsTable data={game.tracks} stats={game.stats} official={game.isOfficial} showDownloadButton={showDownloadButton} />\n                        </Grid>\n                        <Grid item xs={12} className={classes.padTop}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel>Rankings Type</InputLabel>\n                                <Select value={rankingsType} onChange={onChangeRankingsType}>\n                                    <MenuItem value={'leaderboard'}>Live</MenuItem>\n                                    <MenuItem value={'uniqueLeaderboard'}>Unique</MenuItem>\n                                    <MenuItem value={'historyLeaderboard'}>Total</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                <Grid item xs={12} md={6}>\n                                    <RankingsTable\n                                        data={game[rankingsType]}\n                                        hasDuration={game.isOfficial && rankingsType !== 'uniqueLeaderboard'}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6} className={classes.padTop}>\n                                    <Grid container direction=\"column\" justify=\"center\">\n                                        <Grid item xs={12}>\n                                            {rankingsType === 'uniqueLeaderboard' ? (\n                                                <UniqueRecordsChart\n                                                    title=\"WRs\"\n                                                    labels={game[rankingsType].map((row) => row.user.name).slice(0, 20)}\n                                                    series={[\n                                                        {\n                                                            name: 'Unique WRs',\n                                                            data: game[rankingsType].slice(0, 20).map((row) => row.wrs),\n                                                        },\n                                                    ]}\n                                                />\n                                            ) : (\n                                                <RecordsChart\n                                                    title=\"WRs\"\n                                                    labels={game[rankingsType].map((row) => row.user.name)}\n                                                    series={game[rankingsType].map((row) => row.wrs)}\n                                                />\n                                            )}\n                                        </Grid>\n                                        <Grid item xs={12} className={classes.padTop}>\n                                            {rankingsType === 'uniqueLeaderboard' ? (\n                                                <UniqueRecordsChart\n                                                    title=\"WRs\"\n                                                    labels={game[rankingsCountryType]\n                                                        .map((row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name)\n                                                        .slice(0, 20)}\n                                                    series={[\n                                                        {\n                                                            name: 'Unique WRs by Zone',\n                                                            data: game[rankingsCountryType]\n                                                                .slice(0, 20)\n                                                                .map((row) => row.wrs),\n                                                        },\n                                                    ]}\n                                                />\n                                            ) : (\n                                                <RecordsChart\n                                                    title=\"WRs by Zone\"\n                                                    labels={game[rankingsCountryType].map(\n                                                        (row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name,\n                                                    )}\n                                                    series={game[rankingsCountryType].map((row) => row.wrs)}\n                                                />\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </>\n    );\n};\n\nexport default CampaignTab;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSort } from '../utils/stableSort';\nimport { useLocalStorage } from '../Hooks';\nimport { formatScore } from '../utils/tools';\n\nconst rowsOfficial = [\n    { id: 'name', sortable: true, label: 'Name', align: 'left' },\n    { id: 'nb_players', sortable: true, label: 'Players', align: 'left' },\n    { id: 'round.match.winner.displayName', sortable: true, label: 'Winner', align: 'left' },\n];\n\nconst rowsCotd = [\n    { id: 'name', sortable: true, label: 'Name', align: 'left' },\n    { id: 'nb_players', sortable: true, label: 'Players', align: 'left' },\n    { id: 'round.qualifier.winner.displayName', sortable: true, label: 'Qualifier', align: 'left' },\n    { id: 'round.match.winner.displayName', sortable: true, label: 'Winner', align: 'left' },\n];\n\nconst CompetitionsTableHead = ({ order, orderBy, onRequestSort, official }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    const rows = official ? rowsOfficial : rowsCotd;\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row, idx) => (\n                    <TableCell\n                        key={idx}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                        colSpan={idx === rows.length - 1 ? 2 : 1}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst linkToTrackmaniaIoCompetition = (competition) => {\n    return `https://trackmania.io/#/competitions/comp/${encodeURIComponent(competition.id)}`;\n};\n\nconst linkToTrackmaniaIoProfile = (user) => {\n    return `https://trackmania.io/#/player/${encodeURIComponent(user.accountId)}`;\n};\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nconst RecordsRow = ({ wr, official, orderBy, useLiveDuration, history, onClickHistory }) => {\n    const score = formatScore(wr.score, 'tm2');\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, 'tm2') : null;\n\n    const classes = useRowStyles();\n\n    const defaultSort = orderBy === 'name' || orderBy === 'name';\n\n    const doubleWin =\n        wr.round.qualifier?.winner?.accountId === wr.round.match?.winner?.accountId &&\n        wr.round.qualifier?.winner?.accountId;\n\n    return (\n        <>\n            <TableRow tabIndex={-1}>\n                <MinTableCell align=\"left\">\n                    <Link color=\"inherit\" href={linkToTrackmaniaIoCompetition(wr)} rel=\"noreferrer\" target=\"_blank\">\n                        {wr.name}\n                    </Link>\n                </MinTableCell>\n                <MinTableCell align=\"left\">{wr.nb_players}</MinTableCell>\n                <MinTableCell style={noWrap} align=\"left\">\n                    {wr.round.qualifier && (\n                        <Tooltip\n                            title={<span>{wr.round.qualifier.winner.zone}</span>}\n                            placement=\"bottom\"\n                            enterDelay={300}\n                        >\n                            <Link\n                                color={doubleWin ? 'secondary' : 'inherit'}\n                                href={linkToTrackmaniaIoProfile(wr.round.qualifier.winner)}\n                                rel=\"noreferrer\"\n                                target=\"_blank\"\n                            >\n                                {wr.round.qualifier.winner.displayName}\n                            </Link>\n                        </Tooltip>\n                    )}\n                </MinTableCell>\n                <MinTableCell style={noWrap} align=\"left\">\n                    {wr.round.match && (\n                        <Tooltip title={<span>{wr.round.match.winner.zone}</span>} placement=\"bottom\" enterDelay={300}>\n                            <Link\n                                color={doubleWin ? 'secondary' : 'inherit'}\n                                href={linkToTrackmaniaIoProfile(wr.round.match.winner)}\n                                rel=\"noreferrer\"\n                                target=\"_blank\"\n                            >\n                                {wr.round.match.winner.displayName}\n                            </Link>\n                        </Tooltip>\n                    )}\n                </MinTableCell>\n            </TableRow>\n        </>\n    );\n};\n\nconst CompetitionsTable = ({ data, stats, official, useLiveDuration }) => {\n    const [storage, setStorage] = useLocalStorage('tm2020-competitions', {\n        official: { order: 'asc', orderBy: 'name' },\n        totd: { order: 'asc', orderBy: 'name' },\n    });\n\n    const [{ order, rowsPerPage, page, ...state }, setState] = React.useState(defaultState);\n\n    let { orderBy } = state;\n    orderBy = official ? storage.official.orderBy : storage.totd.orderBy;\n    orderBy = official && orderBy === 'name' ? 'name' : orderBy;\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        setState((state) => {\n            const order = state.orderBy === orderBy && state.order === 'desc' ? 'asc' : 'desc';\n            setStorage({ ...storage, [official ? 'official' : 'totd']: { order, orderBy } });\n\n            return {\n                ...state,\n                order,\n                orderBy,\n            };\n        });\n    };\n\n    React.useEffect(() => {\n        const savedState = storage[official ? 'official' : 'totd'];\n        setState((state) => ({ ...state, order: savedState.order, orderBy: savedState.orderBy }));\n    }, [data]);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <CompetitionsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    official={official}\n                />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr, idx) => {\n                            return (\n                                <RecordsRow\n                                    wr={wr}\n                                    official={official}\n                                    orderBy={orderBy}\n                                    useLiveDuration={useLiveDuration}\n                                    key={idx}\n                                />\n                            );\n                        })}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default CompetitionsTable;\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport RankingsTable from '../RankingsTableTrackmania';\nimport CompetitionsTable from '../CompetitionsTableTrackmania';\nimport RecordsChart from '../RecordsChart';\nimport SimpleTitle from '../SimpleTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Api from '../../Api';\nimport { useIsMounted } from '../../Hooks';\nimport { yearMenu, competitionMenu, getCotdMenu } from './CompetitionsMenus';\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst CompetitionsTab = ({ competition, onChangeCompetition, campaign, onChangeCampaign, onChangeYear, onChangeMonth, isOfficial, year, month }) => {\n    const isMounted = useIsMounted();\n    const isCotd = competition === 'competitions/cotd';\n\n    const [game, setGame] = React.useState(undefined);\n    const [stats, setStats] = React.useState(undefined);\n    const [rankingsType, setRankingsType] = React.useState('leaderboard');\n\n    const onChangeRankingsType = React.useCallback(\n        (event) => {\n            setRankingsType(event.target.value);\n        },\n        [setRankingsType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request('trackmania', isCotd ? `${competition}/${month}-${year}` : `${competition}/${year}`)\n            .then((rows) => {\n                if (isMounted.current) {\n                    setGame(rows);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [isMounted, competition, year, month]);\n\n    React.useEffect(() => {\n        setStats(undefined);\n\n        Api.request('trackmania', `rankings/${competition.slice('competition/'.length + 1)}`)\n            .then((rows) => {\n                if (isMounted.current) {\n                    setStats(rows);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n\n                if (isMounted.current) {\n                    setStats(null);\n                }\n            });\n    }, [isMounted, competition]);\n\n    const rankingsCountryType = rankingsType\n        .replace('Leaderboard', 'CountryLeaderboard')\n        .replace('leaderboard', 'countryLeaderboard');\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <>\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Competition</InputLabel>\n                    <Select value={competition} onChange={onChangeCompetition}>\n                        {competitionMenu}\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Year</InputLabel>\n                    <Select value={year} onChange={onChangeYear}>\n                        {yearMenu}\n                    </Select>\n                </FormControl>\n                {isCotd && (\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>Month</InputLabel>\n                        <Select value={month} onChange={onChangeMonth}>\n                            {getCotdMenu(year)}\n                        </Select>\n                    </FormControl>\n                )}\n            </>\n            {game === null && <SimpleTitle data=\"No data.\" />}\n            {game === undefined && <LinearProgress />}\n            <Grid container direction=\"column\" justify=\"center\">\n                {game !== undefined && game !== null && (\n                    <>\n                        <Grid item xs={12}>\n                            <CompetitionsTable\n                                data={game}\n                                stats={game.stats}\n                                official={game.isOfficial}\n                                cotd={isCotd}    \n                            />\n                        </Grid>\n                        <Grid item xs={12} className={classes.padTop}>\n                            <Typography variant=\"h5\">Overall Statistics</Typography>\n                            <br/>\n                            {stats === null && <SimpleTitle data=\"No data.\" />}\n                            {stats === undefined && <LinearProgress />}\n                            {stats !== undefined && stats !== null && (\n                                <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                    <Grid item xs={12} md={6}>\n                                        <RankingsTable\n                                            data={stats.leaderboard}\n                                            hasDuration={false}\n                                            cotd={true}\n                                            hattricks={isCotd}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6} className={classes.padTop}>\n                                        <Grid container direction=\"column\" justify=\"center\">\n                                            <Grid item xs={12}>\n                                                <RecordsChart\n                                                    title=\"Wins\"\n                                                    labels={stats.leaderboard.map((row) => row.user.displayName)}\n                                                    series={stats.leaderboard.map((row) => row.wins.matches)}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12} className={classes.padTop}>\n                                                <RecordsChart\n                                                    title=\"Wins by Zone\"\n                                                    labels={stats.countryLeaderboard.map((row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name)}\n                                                    series={stats.countryLeaderboard.map((row) => row.wins.matches)}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </>\n    );\n};\n\nexport default CompetitionsTab;\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsChart from '../RecordsChart';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport RankingsTable from '../RankingsTableTrackmania';\nimport SimpleTitle from '../SimpleTitle';\nimport Api from '../../Api';\nimport { useIsMounted } from '../../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst RankingsTab = () => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [campaign, setCampaign] = React.useState('rankings/campaign');\n    const [rankingsType, setRankingsType] = React.useState('leaderboard');\n\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n        },\n        [setCampaign],\n    );\n    const onChangeRankingsType = React.useCallback(\n        (event) => {\n            setRankingsType(event.target.value);\n        },\n        [setRankingsType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request('trackmania', campaign)\n            .then((game) => {\n                if (isMounted.current) {\n                    setGame(game);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [setGame, campaign, isMounted]);\n\n    const rankingsCountryType = rankingsType\n        .replace('Leaderboard', 'CountryLeaderboard')\n        .replace('leaderboard', 'countryLeaderboard');\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Campaign</InputLabel>\n                <Select value={campaign} onChange={onChangeCampaign}>\n                    <MenuItem value=\"rankings/campaign\">Official</MenuItem>\n                    <MenuItem value=\"rankings/totd\">TOTD</MenuItem>\n                    <MenuItem value=\"rankings/combined\">Combined</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Rankings Type</InputLabel>\n                <Select value={rankingsType} onChange={onChangeRankingsType}>\n                    <MenuItem value={'leaderboard'}>Live</MenuItem>\n                    <MenuItem value={'uniqueLeaderboard'}>Unique</MenuItem>\n                    <MenuItem value={'historyLeaderboard'}>Total</MenuItem>\n                </Select>\n            </FormControl>\n            {game === null && <SimpleTitle data=\"No data.\" />}\n            {game === undefined && <LinearProgress />}\n            {game !== null && game !== undefined && (\n                <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                    <Grid item xs={12} md={6}>\n                        <RankingsTable\n                            data={game[rankingsType]}\n                            hasDuration={campaign === 'rankings/campaign' && rankingsType !== 'uniqueLeaderboard'}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item xs={12} className={classes.padTop}>\n                                {rankingsType === 'uniqueLeaderboard' ? (\n                                    <UniqueRecordsChart\n                                        title=\"WRs\"\n                                        labels={game[rankingsType].map((row) => row.user.name).slice(0, 20)}\n                                        series={[\n                                            {\n                                                name: 'Unique WRs',\n                                                data: game[rankingsType].slice(0, 20).map((row) => row.wrs),\n                                            },\n                                        ]}\n                                    />\n                                ) : (\n                                    <RecordsChart\n                                        title=\"WRs\"\n                                        labels={game[rankingsType].map((row) => row.user.name)}\n                                        series={game[rankingsType].map((row) => row.wrs)}\n                                    />\n                                )}\n                            </Grid>\n                            <Grid item xs={12} className={classes.padTop}>\n                                {rankingsType === 'uniqueLeaderboard' ? (\n                                    <UniqueRecordsChart\n                                        title=\"WRs\"\n                                        labels={game[rankingsCountryType]\n                                            .map((row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name)\n                                            .slice(0, 20)}\n                                        series={[\n                                            {\n                                                name: 'Unique WRs by Zone',\n                                                data: game[rankingsCountryType].slice(0, 20).map((row) => row.wrs),\n                                            },\n                                        ]}\n                                    />\n                                ) : (\n                                    <RecordsChart\n                                        title=\"WRs by Zone\"\n                                        labels={game[rankingsCountryType].map(\n                                            (row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name,\n                                        )}\n                                        series={game[rankingsCountryType].map((row) => row.wrs)}\n                                    />\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n};\n\nexport default RankingsTab;\n","import React from 'react';\nimport moment from 'moment';\nimport { withRouter } from 'react-router';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport ViewContent from './ViewContent';\nimport CampaignTab from '../components/trackmania/CampaignTab';\nimport CompetitionsTab from '../components/trackmania/CompetitionsTab';\nimport RankingsTab from '../components/trackmania/RankingsTab';\nimport { getInitialValue } from '../components/trackmania/CampaignMenus';\nimport { getInitialCompetitionValue } from '../components/trackmania/CompetitionsMenus';\n\nconst TrackmaniaView = ({ match }) => {\n    const [tab, setTab] = React.useState(0);\n    const [campaign, setCampaign] = React.useState(getInitialValue(tab === 0));\n    const [year, setYear] = React.useState(moment().year());\n    const [competition, setCompetition] = React.useState('competitions/cotd');\n    const [competitionYear, setCompetitionYear] = React.useState(moment().year());\n    const [competitionMonth, setCompetitionMonth] = React.useState(moment().format('MMMM').toLowerCase());\n\n    const page = match.path;\n\n    React.useEffect(() => {\n        setTab(0);\n    }, [page]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n        setCampaign(getInitialValue(newValue === 0, year));\n    };\n\n    const onChangeYear = React.useCallback(\n        (event) => {\n            setYear(event.target.value);\n            setCampaign(getInitialValue(false, event.target.value));\n        },\n        [setYear, setCampaign],\n    );\n\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n        },\n        [setCampaign],\n    );\n\n    const onChangeCompetition = React.useCallback(\n        (event) => {\n            setCompetition(event.target.value);\n        },\n        [setCompetition],\n    );\n\n    const onChangeCompetitionYear = React.useCallback(\n        (event) => {\n            setCompetitionYear(event.target.value);\n            setCompetitionMonth(getInitialCompetitionValue(event.target.value));\n        },\n        [setCompetitionYear],\n    );\n\n    const onChangeCompetitionMonth = React.useCallback(\n        (event) => {\n            setCompetitionMonth(event.target.value);\n        },\n        [setCompetitionMonth],\n    );\n\n    return (\n        <ViewContent>\n            <Paper>\n                <Tabs\n                    value={tab}\n                    onChange={handleTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    <Tab label=\"Campaign\" />\n                    <Tab label=\"Track of the Day\" />\n                    <Tab label=\"Rankings\" />\n                    <Tab label=\"Competitions\" />\n                </Tabs>\n                <Typography component=\"div\" role=\"tabpanel\">\n                    <Box p={3}>\n                        {(tab === 0 || tab === 1) && (\n                            <CampaignTab\n                                campaign={campaign}\n                                onChangeCampaign={onChangeCampaign}\n                                onChangeYear={onChangeYear}\n                                isOfficial={tab === 0}\n                                year={year}\n                            />\n                        )}\n                        {tab === 2 && <RankingsTab />}\n                        {tab === 3 && (\n                            <CompetitionsTab\n                                competition={competition}\n                                onChangeCompetition={onChangeCompetition}\n                                campaign={campaign}\n                                onChangeCampaign={onChangeCampaign}\n                                onChangeYear={onChangeCompetitionYear}\n                                onChangeMonth={onChangeCompetitionMonth}\n                                isOfficial={tab === 0}\n                                year={competitionYear}\n                                month={competitionMonth}\n                            />\n                        )}\n                    </Box>\n                </Typography>\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(TrackmaniaView);\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport HistoryIcon from '@material-ui/icons/History';\nimport { stableSort } from '../utils/stableSort';\nimport { useLocalStorage } from '../Hooks';\nimport tmx from '../utils/tmx';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row, idx) => (\n                    <TableCell\n                        key={idx}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                        colSpan={idx === rows.length - 1 ? 2 : 1}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst linkToExchange = (trac) => {\n    return '';\n};\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nconst RecordsHistoryRow = ({ game, wr, trackType }) => {\n    const score = formatScore(wr.score, game, trackType);\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, game, trackType) : null;\n    const deltaSign = trackType === 'Stunts' ? '+' : '-';\n\n    const tmxGame = tmx(game);\n\n    return (\n        <TableRow tabIndex={-1}>\n            <MinTableCell align=\"left\">\n                <Tooltip title={<Moment format=\"HH:mm\">{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                    <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                        {wr.date}\n                    </Moment>\n                </Tooltip>\n            </MinTableCell>\n            <MinTableCell align=\"left\">{score}</MinTableCell>\n            <MinTableCell align=\"left\">{delta ? deltaSign + delta : ''}</MinTableCell>\n            <MinTableCell align=\"left\">\n                <Link\n                    style={noWrap}\n                    color=\"inherit\"\n                    href={tmxGame.userUrl(wr.user.id)}\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                >\n                    {wr.user.name}\n                </Link>\n            </MinTableCell>\n            <MinTableCell align=\"left\">\n                <Tooltip title=\"Download Replay\" placement=\"bottom\" enterDelay={300}>\n                    <IconButton\n                        size=\"small\"\n                        style={noWrap}\n                        color=\"inherit\"\n                        href={tmxGame.replayUrl(wr.replay)}\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                    >\n                        <SaveAltIcon fontSize=\"inherit\" />\n                    </IconButton>\n                </Tooltip>\n                {wr.validated && (\n                    <Tooltip title=\"Validated with TrackMania Competition Patch\" placement=\"bottom\" enterDelay={300}>\n                        <IconButton\n                            size=\"small\"\n                            style={noWrap}\n                            color=\"inherit\"\n                            href=\"https://donadigo.com/tmcp\"\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <CheckCircleIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Tooltip>\n                )}\n            </MinTableCell>\n        </TableRow>\n    );\n};\n\nconst RecordsRow = ({ game, wr, orderBy, useLiveDuration, history, onClickHistory }) => {\n    const score = formatScore(wr.score, game, wr.track.type);\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, game, wr.track.type) : null;\n    const deltaSign = wr.track.type === 'Stunts' ? '+' : '-';\n\n    const classes = useRowStyles();\n\n    const open = history === wr.track.id;\n    const defaultSort = orderBy === 'track.name';\n    const tmxGame = tmx(game);\n\n    return (\n        <>\n            <TableRow tabIndex={-1}>\n                {(wr.track.isFirst || !defaultSort) && (\n                    <MinTableCell style={noWrap} rowSpan={defaultSort ? wr.track.records : 1} align=\"left\">\n                        <Link color=\"inherit\" href={tmxGame.trackUrl(wr.track.id)} rel=\"noreferrer\" target=\"_blank\">\n                            {wr.track.name}\n                        </Link>\n                    </MinTableCell>\n                )}\n                <MinTableCell align=\"left\">\n                    {delta && (\n                        <Tooltip\n                            title={\n                                <span>\n                                    {deltaSign}\n                                    {delta} to former record\n                                </span>\n                            }\n                            placement=\"bottom\"\n                            enterDelay={300}\n                        >\n                            <span>{score}</span>\n                        </Tooltip>\n                    )}\n                    {!delta && <span>{score}</span>}\n                </MinTableCell>\n                <MinTableCell style={noWrap} align=\"left\">\n                    <Link color=\"inherit\" href={tmxGame.userUrl(wr.user.id)} rel=\"noreferrer\" target=\"_blank\">\n                        {wr.user.name}\n                    </Link>\n                </MinTableCell>\n                <MinTableCell align=\"left\">\n                    <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n                <MinTableCell align=\"left\">\n                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                        {useLiveDuration ? (\n                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                        ) : (\n                            <span>{wr.duration}</span>\n                        )}\n                    </Tooltip>\n                </MinTableCell>\n                <MinTableCell style={noWrap} align=\"left\">\n                    <Tooltip title=\"Download Replay\" placement=\"bottom\" enterDelay={300}>\n                        <IconButton\n                            size=\"small\"\n                            style={noWrap}\n                            color=\"inherit\"\n                            href={tmxGame.replayUrl(wr.replay)}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <SaveAltIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Tooltip>\n                    {wr.validated && (\n                        <Tooltip title=\"Validated with TrackMania Competition Patch\" placement=\"bottom\" enterDelay={300}>\n                            <IconButton\n                                size=\"small\"\n                                style={noWrap}\n                                color=\"inherit\"\n                                href=\"https://donadigo.com/tmcp\"\n                                rel=\"noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <CheckCircleIcon fontSize=\"inherit\" />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    {wr.track.isLast && wr.track.history && (\n                        <IconButton\n                            color=\"inherit\"\n                            size=\"small\"\n                            style={noWrap}\n                            onClick={() => onClickHistory(wr.track.id)}\n                        >\n                            <HistoryIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    )}\n                </MinTableCell>\n            </TableRow>\n            {wr.track.isLast && wr.track.history && (\n                <TableRow className={classes.root}>\n                    <MinTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                            <Box margin={1}>\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                    History\n                                </Typography>\n                                <Table size=\"small\" aria-label=\"purchases\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <MinTableCell>Date</MinTableCell>\n                                            <MinTableCell>Record</MinTableCell>\n                                            <MinTableCell>\n                                                {wr.track.type === 'Stunts' ? 'Improvement' : 'Timesave'}\n                                            </MinTableCell>\n                                            <MinTableCell colSpan={2}>Player</MinTableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {wr.track.history.map((historyWr, idx) => {\n                                            return (\n                                                <RecordsHistoryRow\n                                                    game={game}\n                                                    wr={historyWr}\n                                                    trackType={wr.track.type}\n                                                    key={idx}\n                                                />\n                                            );\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </Box>\n                        </Collapse>\n                    </MinTableCell>\n                </TableRow>\n            )}\n        </>\n    );\n};\n\nconst RecordsTable = ({ game, data, stats, useLiveDuration }) => {\n    const [storage, setStorage] = useLocalStorage(game, {\n        order: 'asc',\n        orderBy: 'track.name',\n    });\n\n    const [{ order, rowsPerPage, page, orderBy }, setState] = React.useState(defaultState);\n    const [history, setHistory] = React.useState(null);\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        setState((state) => {\n            const order = state.orderBy === orderBy && state.order === 'desc' ? 'asc' : 'desc';\n            setStorage({ ...storage, order, orderBy });\n\n            return {\n                ...state,\n                order,\n                orderBy,\n            };\n        });\n    };\n\n    React.useEffect(() => {\n        setState((state) => ({ ...state, order: storage.order, orderBy: storage.orderBy }));\n    }, [data]);\n\n    const onClickHistory = React.useCallback(\n        (id) => {\n            if (history !== id) {\n                setHistory(id);\n            } else {\n                setHistory(null);\n            }\n        },\n        [history, setHistory],\n    );\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr, idx) => {\n                            return (\n                                <RecordsRow\n                                    game={game}\n                                    wr={wr}\n                                    orderBy={orderBy}\n                                    useLiveDuration={useLiveDuration}\n                                    history={history}\n                                    onClickHistory={onClickHistory}\n                                    key={idx}\n                                />\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={5}></MinTableCell>\n                        </TableRow>\n                    )}\n                    {stats.totalPoints > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Points</MinTableCell>\n                            <MinTableCell>\n                                <span>{formatScore(stats.totalPoints, game, 'Stunts')}</span>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport moment from 'moment-timezone';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport RankingsTable from '../RankingsTable';\nimport RecordsTable from '../RecordsTableHistory';\nimport RecordsChart from '../RecordsChart';\nimport SimpleTitle from '../SimpleTitle';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Api from '../../Api';\nimport { useIsMounted } from '../../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst CampaignTab = ({ gameName }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [campaignName, setCampaign] = React.useState(undefined);\n    const [rankingsType] = React.useState('leaderboard');\n\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n        },\n        [setCampaign],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request(gameName)\n            .then((campaigns) => {\n                const game = [];\n                for (const campaign of campaigns) {\n                    const rows = [];\n                    for (const track of campaign.tracks) {\n                        for (const wr of track.wrs) {\n                            const isLast = wr === track.wrs[track.wrs.length - 1];\n                            const history = isLast && (track.history || []).length > 1 ? track.history : undefined;\n\n                            rows.push({\n                                track: {\n                                    id: track.id,\n                                    name: track.name.replace(/(\\$[0-9a-fA-F]{3}|\\$[WNOITSGZBEMwnoitsgzbem]{1})/g, ''),\n                                    isFirst: wr === track.wrs[0],\n                                    isLast,\n                                    records: track.wrs.length,\n                                    history,\n                                    type: track.type,\n                                },\n                                ...wr,\n                            });\n                        }\n                    }\n    \n                    campaign.tracks = rows;\n                    game.push(campaign);\n                }\n\n                if (isMounted.current) {\n                    setGame(game);\n                    setCampaign(game[0].name);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [isMounted, gameName, setCampaign, setGame]);\n\n    const classes = useStyles();\n\n    const currentCampaign = game ? game.find((campaign) => campaign.name === campaignName) : undefined;\n\n    return (\n        <>\n            {(campaignName && game && game.length > 1) && (\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Campaign</InputLabel>\n                    <Select value={campaignName} onChange={onChangeCampaign}>\n                        {game.map((campaign) => {\n                            return (\n                                <MenuItem value={campaign.name} key={campaign.name}>\n                                    {campaign.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n            )}\n            {currentCampaign === null && <SimpleTitle data=\"No data.\" />}\n            {currentCampaign === undefined && <LinearProgress />}\n            <Grid container direction=\"column\" justify=\"center\">\n                {currentCampaign !== undefined && currentCampaign !== null && (\n                    <>\n                        <Grid item xs={12}>\n                            <RecordsTable\n                                game={gameName}\n                                data={currentCampaign.tracks}\n                                stats={currentCampaign.stats}\n                            />\n                        </Grid>\n                        <Grid item xs={12} className={classes.padTop}>\n                            <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                <Grid item xs={12} md={6}>\n                                    <RankingsTable\n                                        game={gameName}\n                                        data={currentCampaign[rankingsType]}\n                                        hasDuration={rankingsType !== 'uniqueLeaderboard'}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6} className={classes.padTop}>\n                                    <Grid container direction=\"column\" justify=\"center\">\n                                        <Grid item xs={12}>\n                                            {rankingsType === 'uniqueLeaderboard' ? (\n                                                <UniqueRecordsChart\n                                                    title=\"WRs\"\n                                                    labels={currentCampaign[rankingsType].map((row) => row.user.name).slice(0, 20)}\n                                                    series={[\n                                                        {\n                                                            name: 'Unique WRs',\n                                                            data: currentCampaign[rankingsType].slice(0, 20).map((row) => row.wrs),\n                                                        },\n                                                    ]}\n                                                />\n                                            ) : (\n                                                <RecordsChart\n                                                    title=\"WRs\"\n                                                    labels={currentCampaign[rankingsType].map((row) => row.user.name)}\n                                                    series={currentCampaign[rankingsType].map((row) => row.wrs)}\n                                                />\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </>\n    );\n};\n\nexport default CampaignTab;\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsChart from '../RecordsChart';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport RankingsTable from '../RankingsTable';\nimport SimpleTitle from '../SimpleTitle';\nimport Api from '../../Api';\nimport { useIsMounted } from '../../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst RankingsTab = ({ gameName }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [campaignName, setCampaign] = React.useState(undefined);\n    const [rankingsType, setRankingsType] = React.useState('leaderboard');\n\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n        },\n        [setCampaign],\n    );\n    const onChangeRankingsType = React.useCallback(\n        (event) => {\n            setRankingsType(event.target.value);\n        },\n        [setRankingsType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request(gameName, 'ranks')\n            .then((game) => {\n                if (isMounted.current) {\n                    setGame(game);\n                    setCampaign(game[0].name);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [setGame, isMounted]);\n\n    const classes = useStyles();\n\n    const currentCampaign = game ? game.find((campaign) => campaign.name === campaignName) : undefined;\n\n    return (\n        <>\n            {(campaignName && game && game.length > 1) && (\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Campaign</InputLabel>\n                    <Select value={campaignName} onChange={onChangeCampaign}>\n                        {game.map((campaign) => {\n                            return (\n                                <MenuItem value={campaign.name} key={campaign.name}>\n                                    {campaign.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n            )}\n            <FormControl className={classes.formControl}>\n                <InputLabel>Rankings Type</InputLabel>\n                <Select value={rankingsType} onChange={onChangeRankingsType}>\n                    <MenuItem value={'leaderboard'}>Live</MenuItem>\n                    <MenuItem value={'uniqueLeaderboard'}>Unique</MenuItem>\n                    <MenuItem value={'historyLeaderboard'}>Total</MenuItem>\n                </Select>\n            </FormControl>\n            {currentCampaign === null && <SimpleTitle data=\"No data.\" />}\n            {currentCampaign === undefined && <LinearProgress />}\n            {currentCampaign !== null && currentCampaign !== undefined && (\n                <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                    <Grid item xs={12} md={6}>\n                        <RankingsTable\n                            game={gameName}\n                            data={currentCampaign[rankingsType]}\n                            hasDuration={rankingsType !== 'uniqueLeaderboard'}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item xs={12} className={classes.padTop}>\n                                {rankingsType === 'uniqueLeaderboard' ? (\n                                    <UniqueRecordsChart\n                                        title=\"WRs\"\n                                        labels={currentCampaign[rankingsType].map((row) => row.user.name).slice(0, 20)}\n                                        series={[\n                                            {\n                                                name: 'Unique WRs',\n                                                data: currentCampaign[rankingsType].slice(0, 20).map((row) => row.wrs),\n                                            },\n                                        ]}\n                                    />\n                                ) : (\n                                    <RecordsChart\n                                        title=\"WRs\"\n                                        labels={currentCampaign[rankingsType].map((row) => row.user.name)}\n                                        series={currentCampaign[rankingsType].map((row) => row.wrs)}\n                                    />\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n};\n\nexport default RankingsTab;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport { getDateDifferenceColor, formatScore } from '../utils/tools';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'track.name', sortable: false, label: 'Map', align: 'left' },\n    { id: 'score', sortable: false, label: 'Times', label2: 'Scores', align: 'left' },\n    { id: 'delta', sortable: false, label: 'Timesave', label2: 'Improvement', align: 'left' },\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'duration', sortable: false, label: 'Duration', align: 'left' },\n    { id: 'date', sortable: false, label: 'Start', align: 'left' },\n    { id: 'beatenBy.date', sortable: false, label: 'Ended', align: 'left' },\n    { id: 'beatenBy.user.name', sortable: false, label: 'Beaten By', align: 'left' },\n];\n\nconst LongestDominationHead = ({ order, orderBy, onRequestSort, scoreType }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {scoreType === 'Stunts' && row.label2 ? row.label2 : row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'duration',\n    thenBy: 'date',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ game, data, scoreType }) => {\n    const [{ order, orderBy, thenBy }, setState] = React.useState({ ...defaultState });\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n\n        setState((state) => ({\n            ...state,\n            order: state.orderBy === newOrderBy && state.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    const tmxGame = tmx(game);\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <LongestDominationHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    scoreType={scoreType}\n                />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy).map((row) => (\n                        <TableRow tabIndex={-1} key={row.replay}>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.trackUrl(row.track.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.track.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\" style={noWrap}>\n                                {formatScore(row.score, game, row.track.type)} →{' '}\n                                {formatScore(row.lastScore, game, row.track.type)}\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                {row.track.type === 'Stunts' ? '+' : '-'}\n                                {formatScore(Math.abs(row.lastScore - row.score), game, row.track.type)}\n                            </MinTableCell>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.userUrl(row.user.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.user.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                    <span>{row.duration}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <Tooltip\n                                    title={<Moment fromNow>{row.date}</Moment>}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <Moment\n                                        style={{ color: getDateDifferenceColor(row.date), ...noWrap }}\n                                        format=\"YYYY-MM-DD\"\n                                    >\n                                        {row.date}\n                                    </Moment>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                {row.beatenBy.length > 0 ? (\n                                    <Tooltip\n                                        title={<Moment fromNow>{row.beatenBy[0].date}</Moment>}\n                                        placement=\"bottom-end\"\n                                        enterDelay={300}\n                                    >\n                                        <Moment\n                                            style={{\n                                                color: getDateDifferenceColor(row.beatenBy[0].date),\n                                                ...noWrap,\n                                            }}\n                                            format=\"YYYY-MM-DD\"\n                                        >\n                                            {row.beatenBy[0].date}\n                                        </Moment>\n                                    </Tooltip>\n                                ) : (\n                                    <span>ongoing</span>\n                                )}\n                            </MinTableCell>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                {row.beatenBy.length > 0 ? (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={tmxGame.userUrl(row.beatenBy[0].user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.beatenBy[0].user.name}\n                                    </Link>\n                                ) : (\n                                    <span>unbeaten</span>\n                                )}\n                            </MinTableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport { getDateDifferenceColor, formatScore } from '../utils/tools';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'track.name', sortable: false, label: 'Map', align: 'left' },\n    { id: 'score', sortable: false, label: 'Time', label2: 'Score', align: 'left' },\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'duration', sortable: false, label: 'Duration', align: 'left' },\n    { id: 'date', sortable: false, label: 'Start', align: 'left' },\n    { id: 'beatenBy.date', sortable: false, label: 'Ended', align: 'left' },\n    { id: 'beatenBy.user.name', sortable: false, label: 'Beaten By', align: 'left' },\n];\n\nconst LongestLastingHead = ({ order, orderBy, onRequestSort, scoreType }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {scoreType === 'Stunts' && row.label2 ? row.label2 : row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'duration',\n    thenBy: 'date',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ game, data, scoreType }) => {\n    const [{ order, orderBy, thenBy }, setState] = React.useState({ ...defaultState });\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n\n        setState((state) => ({\n            ...state,\n            order: state.orderBy === newOrderBy && state.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    const tmxGame = tmx(game);\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <LongestLastingHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    scoreType={scoreType}\n                />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy).map((row) => (\n                        <TableRow tabIndex={-1} key={row.replay}>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.trackUrl(row.track.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.track.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">{formatScore(row.score, game, row.track.type)}</MinTableCell>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.userUrl(row.user.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.user.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                    <span>{row.duration}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <Tooltip\n                                    title={<Moment fromNow>{row.date}</Moment>}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <Moment\n                                        style={{ color: getDateDifferenceColor(row.date), ...noWrap }}\n                                        format=\"YYYY-MM-DD\"\n                                    >\n                                        {row.date}\n                                    </Moment>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                {row.beatenBy.length > 0 ? (\n                                    <Tooltip\n                                        title={<Moment fromNow>{row.beatenBy[0].date}</Moment>}\n                                        placement=\"bottom-end\"\n                                        enterDelay={300}\n                                    >\n                                        <Moment\n                                            style={{ color: getDateDifferenceColor(row.beatenBy[0].date), ...noWrap }}\n                                            format=\"YYYY-MM-DD\"\n                                        >\n                                            {row.beatenBy[0].date}\n                                        </Moment>\n                                    </Tooltip>\n                                ) : (\n                                    <span>ongoing</span>\n                                )}\n                            </MinTableCell>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                {row.beatenBy.length > 0 ? (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={tmxGame.userUrl(row.beatenBy[0].user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.beatenBy[0].user.name}\n                                    </Link>\n                                ) : (\n                                    <span>unbeaten</span>\n                                )}\n                            </MinTableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport { getDateDifferenceColor, formatScore } from '../utils/tools';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'track.name', sortable: false, label: 'Map', align: 'left' },\n    { id: 'score', sortable: false, label: 'Time', label2: 'Score', align: 'left' },\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'delta', sortable: false, label: 'Improvement', align: 'left' },\n    { id: 'date', sortable: false, label: 'Date', align: 'left' },\n];\n\nconst LargestImprovementHead = ({ order, orderBy, onRequestSort, scoreType }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {scoreType === 'Stunts' && row.label2 ? rowl.label2 : row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'delta',\n    thenBy: 'date',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ game, data, scoreType }) => {\n    const [{ order, orderBy, thenBy }, setState] = React.useState({ ...defaultState });\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n\n        setState((state) => ({\n            ...state,\n            order: state.orderBy === newOrderBy && state.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    const tmxGame = tmx(game);\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <LargestImprovementHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    scoreType={scoreType}\n                />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy).map((row) => (\n                        <TableRow tabIndex={-1} key={row.replay}>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.trackUrl(row.track.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.track.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">{formatScore(row.score, game, row.track.type)}</MinTableCell>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.userUrl(row.user.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.user.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <span>\n                                    {row.track.type === 'Stunts' ? '+' : '-'}\n                                    {formatScore(row.delta, game, row.track.type)}\n                                </span>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <Tooltip\n                                    title={<Moment fromNow>{row.date}</Moment>}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <Moment\n                                        style={{ color: getDateDifferenceColor(row.date), ...noWrap }}\n                                        format=\"YYYY-MM-DD\"\n                                    >\n                                        {row.date}\n                                    </Moment>\n                                </Tooltip>\n                            </MinTableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsChart from '../RecordsChart';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport LongestDomination from '../LongestDomination';\nimport LongestLasting from '../LongestLasting';\nimport LargestImprovement from '../LargestImprovement';\nimport RankingsTable from '../RankingsTableTrackmania';\nimport SimpleTitle from '../SimpleTitle';\nimport Api from '../../Api';\nimport { useIsMounted, useRenders } from '../../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst StatisticsTab = ({ gameName }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [campaignName, setCampaign] = React.useState(undefined);\n    const [type, setType] = React.useState('longestLasting');\n    const [trackType, setTrackType] = React.useState('Race');\n\n    const onChangeType = React.useCallback(\n        (event) => {\n            setType(event.target.value);\n        },\n        [setType],\n    );\n    const onChangeTrackType = React.useCallback(\n        (event) => {\n            setTrackType(event.target.value);\n        },\n        [setTrackType],\n    );\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n            setTrackType(\n                game ? game.find((campaign) => campaign.name === event.target.value)[type][0].track.type : 'Race',\n            );\n        },\n        [game, setCampaign, setTrackType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request(gameName, 'stats')\n            .then((game) => {\n                if (isMounted.current) {\n                    setGame(game);\n                    setCampaign(game[0].name);\n                    setTrackType(game[0][type][0].track.type);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [setGame, setCampaign, setTrackType, isMounted]);\n\n    const StatsComponent = (() => {\n        switch (type) {\n            case 'longestDomination':\n                return LongestDomination;\n            case 'longestLasting':\n                return LongestLasting;\n            case 'largestImprovement':\n                return LargestImprovement;\n            default:\n                return null;\n        }\n    })();\n\n    const classes = useStyles();\n\n    const currentCampaign = game ? game.find((campaign) => campaign.name === campaignName) : undefined;\n\n    return (\n        <>\n            {campaignName && game && game.length > 1 && (\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Campaign</InputLabel>\n                    <Select value={campaignName} onChange={onChangeCampaign}>\n                        {game.map((campaign) => {\n                            return (\n                                <MenuItem value={campaign.name} key={campaign.name}>\n                                    {campaign.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n            )}\n            <FormControl className={classes.formControl}>\n                <InputLabel>Stats Type</InputLabel>\n                <Select value={type} onChange={onChangeType}>\n                    <MenuItem value={'longestLasting'}>Longest Lasting</MenuItem>\n                    <MenuItem value={'longestDomination'}>Longest Domination</MenuItem>\n                    <MenuItem value={'largestImprovement'}>Largest Improvement</MenuItem>\n                </Select>\n            </FormControl>\n            {currentCampaign && new Set(currentCampaign[type].map(({ track }) => track.type)).size > 1 && (\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Track Type</InputLabel>\n                    <Select value={trackType} onChange={onChangeTrackType}>\n                        <MenuItem value={'Race'}>Race</MenuItem>\n                        <MenuItem value={'Stunts'}>Stunts</MenuItem>\n                    </Select>\n                </FormControl>\n            )}\n            {currentCampaign === null && <SimpleTitle data=\"No data.\" />}\n            {currentCampaign === undefined && <LinearProgress />}\n            {currentCampaign !== null && currentCampaign !== undefined && (\n                <Grid container direction=\"column\" justify=\"center\">\n                    <Grid item xs={12}>\n                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                            <Grid item xs={12}>\n                                {currentCampaign && currentCampaign[type] && (\n                                    <StatsComponent\n                                        game={gameName}\n                                        data={currentCampaign[type].filter(({ track }) => track.type === trackType)}\n                                        trackType={trackType}\n                                    />\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n};\n\nexport default StatisticsTab;\n","import React from 'react';\nimport moment from 'moment';\nimport { withRouter } from 'react-router';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport ViewContent from './ViewContent';\nimport CampaignTab from '../components/history/CampaignTab';\nimport RankingsTab from '../components/history/RankingsTab';\nimport StatisticsTab from '../components/history/StatisticsTab';\n\nconst TrackmaniaHistoryView = ({ match }) => {\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.path;\n\n    React.useEffect(() => {\n        setTab(0);\n    }, [page]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const gameName = match.path.slice(1);\n\n    return (\n        <ViewContent>\n            <Paper>\n                <Tabs\n                    value={tab}\n                    onChange={handleTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    <Tab label=\"Campaign\" />\n                    <Tab label=\"Rankings\" />\n                    <Tab label=\"Statistics\" />\n                </Tabs>\n                <Typography component=\"div\" role=\"tabpanel\">\n                    <Box p={3}>\n                        {tab === 0 && <CampaignTab gameName={gameName} />}\n                        {tab === 1 && <RankingsTab gameName={gameName} />}\n                        {tab === 2 && <StatisticsTab gameName={gameName} />}\n                    </Box>\n                </Typography>\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(TrackmaniaHistoryView);\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleTitle from '../components/SimpleTitle';\nimport ViewContent from './ViewContent';\nimport { useLocation, useParams, useHistory } from 'react-router-dom';\nimport { api2 } from '../Api';\nimport AppState from '../AppState';\n\nconst LoginView = () => {\n    const {\n        dispatch,\n    } = React.useContext(AppState);\n\n    const location = useLocation();\n    const history = useHistory();\n    const params = useParams();\n\n    React.useEffect(() => {\n        api2.login(params.source, location.search)\n            .then((data) => {\n                dispatch({ action: 'setProfile', data });\n                history.push('/');\n            })\n            .catch(console.error);\n    }, []);\n\n    return (\n        <ViewContent>\n            <Paper>\n                <SimpleTitle data=\"Logging in...\" />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default LoginView;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleTitle from '../components/SimpleTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ViewContent from './ViewContent';\nimport AppState from '../AppState';\nimport { Permissions, Status } from '../models/Permissions';\n\nconst LoginView = () => {\n    const {\n        state: { user },\n    } = React.useContext(AppState);\n\n    const statusToText = (profile) => {\n        const status = [\n            { value: Status.ACTIVE, text: 'active' },\n            { value: Status.INACTIVE, text: 'inactive' },\n            { value: Status.BANNED, text: 'banned' },\n        ].find(({ value }) => profile.status === value);\n        return status ? status.text : 'unknown';\n    };\n\n    const permissionToText = (profile) => {\n        return [\n            { value: Permissions.api_MANAGE_DATA, text: 'api_MANAGE_DATA' },\n            { value: Permissions.api_MANAGE_USERS, text: 'api_MANAGE_USERS' },\n            { value: Permissions.trackmania_DOWNLOAD_FILES, text: 'trackmania_DOWNLOAD_FILES' },\n            { value: Permissions.trackmania_MANAGE_MEDIA, text: 'trackmania_MANAGE_MEDIA' },\n            { value: Permissions.trackmania_MANAGE_DATA, text: 'trackmania_MANAGE_DATA' },\n            { value: Permissions.maniaplanet_DOWNLOAD_FILES, text: 'maniaplanet_DOWNLOAD_FILES' },\n            { value: Permissions.maniaplanet_MANAGE_MEDIA, text: 'maniaplanet_MANAGE_MEDIA' },\n            { value: Permissions.maniaplanet_MANAGE_DATA, text: 'maniaplanet_MANAGE_DATA' },\n        ]\n            .filter(({ value }) => profile.permissions & value)\n            .map((permission) => permission.text)\n            .join(' | ');\n    };\n\n    return (\n        <ViewContent>\n            <Paper>\n                {!user.isLoggedIn() && (\n                    <SimpleTitle data=\"Not logged in :(\" />\n                )}\n                {user.isLoggedIn() && (\n                    <>\n                        <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 50px 0px 50px' }}>\n                            {user.profile.nickname}\n                        </Typography>\n                        <Typography variant=\"body1\" gutterBottom style={{ padding: '0px 50px 0px 50px' }}>\n                            Permissions: {permissionToText(user.profile) || 'none'}\n                        </Typography>\n                        <Typography variant=\"body1\" gutterBottom style={{ padding: '0px 50px 0px 50px' }}>\n                            Status: {statusToText(user.profile)}\n                        </Typography>\n                        <Typography variant=\"body1\" gutterBottom style={{ padding: '0px 50px 0px 50px' }}>\n                            Source: {user.profile.source}\n                        </Typography>\n                        <Typography variant=\"body1\" gutterBottom style={{ padding: '0px 50px 50px 50px' }}>\n                            Login ID: {user.profile.login_id}\n                        </Typography>\n                    </>\n                )}\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default LoginView;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport ViewContent from './ViewContent';\nimport { api2 } from '../Api';\nimport AppState from '../AppState';\n\nconst LoginView = () => {\n    const {\n        state: { users },\n        dispatch,\n    } = React.useContext(AppState);\n\n    React.useEffect(() => {\n        api2.getUsers()\n            .then(({ data }) => dispatch({ action: 'setUsers', data }))\n            .catch(console.error);\n    }, []);\n\n    return (\n        <ViewContent>\n            <Paper>\n                {users.map((user) => {\n                    return (\n                        <div key={user._id}>{user.nickname} | {user.permissions} | {user.status} | {user.source} | {user.login_id}</div>\n                    );\n                })}\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default LoginView;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { red, orange } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport GameView from './views/GameView';\nimport NotFoundView from './views/NotFoundView';\nimport ReplayView from './views/ReplayView';\nimport AppState, { AppReducer } from './AppState';\nimport TrackmaniaView from './views/TrackmaniaView';\nimport TrackmaniaHistoryView from './views/TrackmaniaHistoryView';\nimport LoginView from './views/LoginView';\nimport ProfileView from './views/ProfileView';\nimport UsersView from './views/UsersView';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(5),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: red[300],\n                    main: red[500],\n                    dark: red[700],\n                },\n                secondary: {\n                    light: orange[300],\n                    main: orange[500],\n                    dark: orange[700],\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter>\n                    <AppBar />\n                    <div className={classes.views}>\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/trackmania\" />\n                            <Redirect exact from=\"/tm\" to=\"/trackmania\" />\n                            <Redirect exact from=\"/wii\" to=\"/tmwii\" />\n                            <Redirect exact from=\"/tmo\" to=\"/original\" />\n                            <Redirect exact from=\"/tmn\" to=\"/nations\" />\n                            <Redirect exact from=\"/tms\" to=\"/sunrise\" />\n                            <Redirect exact from=\"/tmnf\" to=\"/tmnforever\" />\n                            <Route exact path=\"/trackmania\" component={TrackmaniaView} />\n                            <Route exact path=\"/tmnforever\" component={TrackmaniaHistoryView} />\n                            <Route exact path=\"/united\" component={TrackmaniaHistoryView} />\n                            <Route exact path=\"/nations\" component={TrackmaniaHistoryView} />\n                            <Route\n                                exact\n                                path=\"/(original|sunrise|tm2|tmwii)/:date?\"\n                                component={GameView}\n                            />\n                            <Route exact path=\"/replay\" component={ReplayView} />\n                            <Route exact path=\"/about\" component={AboutView} />\n                            <Route exact path=\"/login/:source(trackmania|maniaplanet)\" component={LoginView} />\n                            <Route exact path=\"/me\" component={ProfileView} />\n                            <Route exact path=\"/users\" component={UsersView} />\n                            <Route component={NotFoundView} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}